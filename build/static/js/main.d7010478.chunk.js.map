{"version":3,"sources":["utils/store.js","utils/snackbar-wrapper.jsx","utils/loading.jsx","utils/container.jsx","utils/use-router.jsx","pages/index/index-card.jsx","rtc-client.js","pages/index/settings-card.jsx","utils/use-devices.jsx","pages/index/card.jsx","pages/index.jsx","pages/meeting/stream-player.jsx","pages/meeting.jsx","utils/use-stream.jsx","App.jsx","serviceWorker.js","utils/theme.js","index.js"],"names":["defaultState","loading","streams","localStream","currentStream","otherStreams","devicesList","config","uid","host","channelName","token","process","REACT_APP_AGORA_APP_TOKEN","microphoneId","cameraId","resolution","agoraClient","mode","codec","muteVideo","muteAudio","screen","profile","reducer","state","action","type","payload","client","newCurrentStream","filter","it","getId","newStream","length","newStreams","stream","targetId","forEach","isPlaying","stop","close","Error","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","customSnackbar","minWidth","minHeight","background","boxShadow","borderRadius","justifyContent","padding","SnackbarWrapper","props","classes","mutationCtx","useGlobalMutation","variant","onClose","other","Icon","useEffect","timer","setTimeout","removeTop","clearTimeout","SnackbarContent","className","clsx","aria-describedby","id","IconButton","key","aria-label","color","onClick","CustomizedSnackbar","handleClose","evt","toasts","map","item","index","Snackbar","open","anchorOrigin","vertical","horizontal","useStyles","progress","margin","container","height","width","CircularLoading","CircularProgress","StateContext","createContext","MutationContext","useGlobalState","useContext","RouterContext","React","BrowserRouterHook","children","routeProps","Provider","value","useRouter","CustomRadio","withStyles","root","checked","onChange","Box","flex","fontStyle","midItem","marginTop","marginBottom","coverLeft","flexDirection","coverContent","card","maxHeight","input","maxWidth","alignSelf","grid","button","lineHeight","textTransform","radio","paddingRight","IndexCard","routerCtx","stateCtx","handleChange","target","updateConfig","to","href","FormControl","InputLabel","htmlFor","Input","name","defaultValue","Button","startLoading","history","push","pathname","toastError","appID","REACT_APP_AGORA_APP_ID","console","log","AgoraRTC","VERSION","checkSystemRequirements","RTCClient","this","_client","_joined","_localStream","_params","_uid","_eventBus","EventEmitter","_showProfile","_subscribed","_created","data","createClient","callback","indexOf","on","role","setClientRole","Promise","resolve","reject","unpublish","rtcStream","createStream","streamID","audio","video","setVideoProfile","init","emit","err","screenSharingStream","setScreenProfile","subscribe","_tmpStream","_createTmpStream","then","getDevices","devices","join","channel","createRTCStream","catch","publish","leave","destroy","menuTitle","textAlign","position","top","menu","line","borderBottom","hr","switchItem","marginLeft","CustomSwitch","switchBase","transform","common","white","border","thumb","track","grey","transition","transitions","create","focusVisible","Switch","focusVisibleClassName","SettingsCard","useMemo","kind","idx","deviceId","label","cameraList","microphoneList","setDevicesList","stopLoading","useDevices","Select","inputProps","MenuItem","setCodec","FormControlLabel","control","setVideo","setAudio","setProfile","coverRight","CardPage","Card","fontWeight","exact","path","component","boxSizing","Index","Container","StreamPlayer","domId","useState","resume","changeResume","autoplay","changeAutoplay","accessDelay","fps","setState","analytics","setInterval","getStats","stats","local","videoSendResolutionWidth","videoReceiveResolutionWidth","videoSendResolutionHeight","videoReceiveResolutionHeight","videoSendFrameRate","videoReceiveFrameRate","clearInterval","play","fit","errState","status","onDoubleClick","stopPropagation","showProfile","showUid","customBtn","backgroundSize","cursor","leftAlign","rightAlign","menuContainer","zIndex","MeetingPage","userRouter","localClient","connectionStateChanged","addLocal","addStream","removeStream","removeStreamById","useStream","handleClick","unmuteVideo","unmuteAudio","setScreen","createScreenSharingStream","handleDoubleClick","setCurrentStream","clearAllStream","App","Meeting","Boolean","window","location","hostname","match","createMuiTheme","typography","overrides","MuiFormControl","MuiInput","underline","ReactDOM","render","ThemeProvider","THEME","useReducer","dispatch","updateToasts","methods","params","setClient","clientInstance","param","toastSuccess","toastInfo","items","e","setLocalStream","curState","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2wBAAA,IAAMA,EAAe,CAEnBC,SAAS,EAETC,QAAS,GACTC,YAAa,KACbC,cAAe,KACfC,aAAc,GACdC,YAAa,GAEbC,OAAQ,CACNC,IAAK,EACLC,MAAM,EACNC,YAAa,GACbC,MAAOC,+CAAYC,0BACnBC,aAAc,GACdC,SAAU,GACVC,WAAY,QAEdC,YAAa,KACbC,KAAM,OACNC,MAAO,OACPC,WAAW,EACXC,WAAW,EACXC,QAAQ,EACRC,SAAS,GAGLC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,SACH,OAAO,EAAP,GAAWF,EAAX,CAAkBlB,OAAQmB,EAAOE,UAEnC,IAAK,SACH,OAAO,EAAP,GAAYH,EAAZ,CAAmBI,OAAQH,EAAOE,UAEpC,IAAK,UACH,OAAO,EAAP,GAAYH,EAAZ,CAAmBxB,QAASyB,EAAOE,UAErC,IAAK,QACH,OAAO,EAAP,GAAYH,EAAZ,CAAmBN,MAAOO,EAAOE,UAEnC,IAAK,QACH,OAAO,EAAP,GAAYH,EAAZ,CAAmBL,UAAWM,EAAOE,UAEvC,IAAK,QACH,OAAO,EAAP,GAAYH,EAAZ,CAAmBJ,UAAWK,EAAOE,UAEvC,IAAK,SACH,OAAO,EAAP,GAAYH,EAAZ,CAAmBH,OAAQI,EAAOE,UAEpC,IAAK,cACH,OAAO,EAAP,GAAWH,EAAX,CAAkBnB,YAAaoB,EAAOE,UAExC,IAAK,cACH,OAAO,EAAP,GAAYH,EAAZ,CAAmBtB,YAAauB,EAAOE,UAEzC,IAAK,UACH,OAAO,EAAP,GAAYH,EAAZ,CAAmBF,QAASG,EAAOE,UAErC,IAAK,gBAAkB,IACd1B,EAAWuB,EAAXvB,QACD4B,EAAmBJ,EAAOE,QAC5BvB,EAAeH,EAAQ6B,QAAO,SAAAC,GAAE,OAAIA,EAAGC,UAAYH,EAAiBG,WACxE,OAAO,EAAP,GAAYR,EAAZ,CAAmBrB,cAAe0B,EAAkBzB,iBAEtD,IAAK,YAAc,IACVH,EAA0BuB,EAA1BvB,QAASE,EAAiBqB,EAAjBrB,cACV8B,EAAYR,EAAOE,QACrBE,EAAmB1B,EAIvB,GAHK0B,IACHA,EAAmBI,GAEE,IAAnBhC,EAAQiC,OAAc,OAAO,EAAP,GAAYV,GACtC,IAAIW,EAAU,sBAAOlC,GAAP,CAAgBgC,IAC1B7B,EAAe+B,EAAWL,QAAO,SAAAC,GAAE,OAAIA,EAAGC,UAAYH,EAAiBG,WAC3E,OAAO,EAAP,GAAYR,EAAZ,CAAmBvB,QAASkC,EAAYhC,cAAe0B,EAAkBzB,iBAE3E,IAAK,eAAiB,IACbH,EAA0BuB,EAA1BvB,QAASE,EAAiBqB,EAAjBrB,cACTiC,EAAeX,EAAfW,OAAQ7B,EAAOkB,EAAPlB,IACT8B,EAAWD,EAASA,EAAOJ,QAAUzB,EACvCsB,EAAmB1B,EACjBgC,EAAalC,EAChB6B,QAAO,SAACM,GAAD,OAAaA,EAAOJ,UAAYK,KACtCA,IAAalC,EAAc6B,UAE3BH,EADwB,IAAtBM,EAAWD,OACM,KAEAC,EAAW,IAGlC,IAAI/B,EAAeyB,EAAmBM,EAAWL,QAAO,SAAAC,GAAE,OAAIA,EAAGC,UAAYH,EAAiBG,WAAW,GACzG,OAAO,EAAP,GAAYR,EAAZ,CAAmBvB,QAASkC,EAAYhC,cAAe0B,EAAkBzB,iBAE3E,IAAK,iBAAmB,IACfH,EAAuCuB,EAAvCvB,QAASC,EAA8BsB,EAA9BtB,YAAaC,EAAiBqB,EAAjBrB,cAkB7B,OAjBAF,EAAQqC,SAAQ,SAACF,GACXA,EAAOG,aACTH,EAAOI,OAETJ,EAAOK,WAGLvC,IACFA,EAAYqC,aACZrC,EAAYsC,OACZtC,EAAYuC,SAEVtC,IACFA,EAAcoC,aACdpC,EAAcqC,OACdrC,EAAcsC,SAET,EAAP,GAAYjB,EAAZ,CAAmBrB,cAAe,KAAMD,YAAa,KAAMD,QAAS,KAEtE,QACE,MAAM,IAAIyC,MAAM,+B,0JCtGhBC,EAAc,CAClBC,QAASC,IACTC,QAASC,IACTC,MAAOC,IACPC,KAAMC,KAGFC,EAAaC,aAAW,SAAAC,GAAK,MAAK,CACtCV,QAAS,CACPW,gBAAiBC,IAAM,MAEzBR,MAAO,CACLO,gBAAiBD,EAAMG,QAAQT,MAAMU,MAEvCR,KAAM,CACJK,gBAAiBD,EAAMG,QAAQE,QAAQC,MAEzCd,QAAS,CACPS,gBAAiBM,IAAM,MAEzBC,KAAM,CACJC,SAAU,IAEZC,YAAa,CACXC,QAAS,GACTC,YAAaZ,EAAMa,QAAQ,IAE7BC,QAAS,CACPC,QAAS,OACTC,WAAY,UAEdC,eAAgB,CACdC,SAAU,mBACVC,UAAW,kBACXC,WAAY,kBACZC,UAAW,sCACXC,aAAc,OACdC,eAAgB,SAChBC,QAAS,cAUb,SAASC,EAAgBC,GACvB,IAAMC,EAAU7B,IACV8B,EAAcC,IACZf,EAAwCY,EAAxCZ,QAAkBgB,GAAsBJ,EAA/BK,QAA+BL,EAAtBI,SAAYE,EAHR,YAGkBN,EAHlB,iCAIxBO,EAAO5C,EAAYyC,GAUzB,OARAI,qBAAU,WACR,IAAMC,EAAQC,YAAW,WACvBR,EAAYS,cACX,KACH,OAAO,WACLC,aAAaH,MAEd,CAACP,IAEF,kBAACW,EAAA,EAAD,eACEC,UAAWC,YAAKd,EAAQG,GAAUH,EAAQV,gBAC1CyB,mBAAiB,kBACjB5B,QACE,0BAAM6B,GAAG,kBAAkBH,UAAWb,EAAQb,SAC/B,UAAZgB,EAAsB,uBAAGU,UAAU,eAClC,kBAACP,EAAD,CAAMO,UAAWC,YAAKd,EAAQnB,KAAMmB,EAAQjB,eAC7CI,GAGL3C,OAAQ,CACN,kBAACyE,EAAA,EAAD,CAAYC,IAAI,QAAQC,aAAW,QAAQC,MAAM,UAAUC,QAAS,WAClEpB,EAAYS,cAEZ,kBAAC,IAAD,CAAWG,UAAWC,YAAKd,EAAQnB,WAGnCwB,IAKK,SAASiB,EAAmBvB,GAEzC,IAAMwB,EAAc,SAACC,KAGrB,OACE,oCACGzB,EAAM0B,OAAOC,KAAI,SAACC,EAAMC,GAAP,OAChB,kBAACC,EAAA,EAAD,CACEX,IAAKU,EACLE,MAAM,EACNC,aAAc,CACZC,SAAU,MACVC,WAAY,WAId,kBAACnC,EAAD,CACEM,QAASmB,EACTpB,QAASwB,EAAKxB,QACdhB,QAAO,UAAKwC,EAAKxC,gB,aCpHvB+C,EAAY9D,aAAW,SAAAC,GAAK,MAAK,CACrC8D,SAAU,CACRC,OAAQ/D,EAAMa,QAAQ,GACtBkC,MAAO,WAETiB,UAAW,CACTC,OAAQ,OACRC,MAAO,OACPnD,QAAS,OACTQ,eAAgB,SAChBP,WAAY,SACZI,WAAY,eAID,SAAS+C,IACtB,IAAMxC,EAAUkC,IAEhB,OACE,yBAAKrB,UAAWb,EAAQqC,WACtB,kBAACI,EAAA,EAAD,CAAkB5B,UAAWb,EAAQmC,Y,yjBCnB3C,IAAMO,EAAeC,wBAAc,IAC7BC,EAAkBD,wBAAc,IAiH/B,SAASE,IACd,OAAOC,qBAAWJ,GAGb,SAASxC,IACd,OAAO4C,qBAAWF,G,mFCzHPG,GAAgBC,IAAML,cAAc,IAEpCM,GAAoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAC/B,kBAAC,KAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,MACG,SAACC,GAAD,OACC,kBAACJ,GAAcK,SAAf,CAAwBC,MAAOF,GAC5BD,SAQE,SAASI,KACtB,OAAOR,qBAAWC,ICPpB,IAAMQ,GAAcC,YAAW,CAC7BC,KAAM,CACJrC,MAAO,UACP,YAAa,CACXA,MAAO,WAET,UAAW,CACT9C,gBAAiB,aAPHkF,EAUjB,YAA0B,EAAxBN,SAAyB,IAAZnD,EAAW,4BAC3B,OACE,yBAAKc,UAAU,aACb,yBAAKA,UAAS,eAAUd,EAAMsD,MAAhB,YAAyBtD,EAAM2D,QAAU,SAAW,cAClE,yBAAK7C,UAAS,oBAAed,EAAMsD,QACjC,yBAAKxC,UAAU,gBACb,2BAAOpE,KAAK,QAAQ4G,MAAOtD,EAAMsD,MAAOK,QAAS3D,EAAM2D,QAASC,SAAU5D,EAAM4D,WAChF,yBAAK9C,UAAU,eAEjB,kBAAC+C,EAAA,EAAD,CAAKC,KAAK,IAAIhD,UAAS,oBAAed,EAAM2D,QAAU,SAAW,aAAe3D,EAAMsD,YAMxFnB,GAAY9D,aAAW,SAAAC,GAAK,MAAK,CACrCyF,UAAW,CACT1C,MAAO,WAET2C,QAAS,CACPC,UAAW,OACXC,aAAc,QAEhBtC,KAAM,CACJkC,KAAM,EACNzE,QAAS,OACTC,WAAY,UAEd6E,UAAW,CACTzE,WAAW,oDACXJ,WAAY,SACZwE,KAAM,EACNzE,QAAS,OACT+E,cAAe,UAEjBC,aAAc,CACZhF,QAAS,OACTQ,eAAgB,SAChBuE,cAAe,SACf/C,MAAO,QAETiB,UAAW,CACTjD,QAAS,OACTQ,eAAgB,SAChBP,WAAY,UAEdgF,KAAM,CACJjF,QAAS,OACTG,SAAU,IACVC,UAAW,IACX8E,UAAW,IACX3E,aAAc,OACdD,UAAW,oCAEb6E,MAAO,CACLC,SAAU,QACVjF,SAAU,QACVkF,UAAW,UAEbC,KAAM,CACJtC,OAAQ,gBAEVuC,OAAQ,CACNC,WAAY,OACZxD,MAAM,sBACNtC,SAAU,OACV+F,cAAe,OACfvC,OAAQ,OACRC,MAAO,QACP,UAAW,CACTjE,gBAAiB,WAEnB8D,OAAQ/D,EAAMa,QAAQ,GACtB8E,UAAW,OACX1F,gBAAiB,UACjBqB,aAAc,QAEhBmF,MAAO,CACLjF,QAAS,IACTf,SAAU,OAEVO,WAAY,SACZ0F,aAAc,WAIH,SAASC,KACtB,IAAMhF,EAAUkC,KAEV+C,EAAY3B,KACZ4B,EAAWrC,IACX5C,EAAcC,IAYdiF,EAAe,SAAC3D,GAAS,IACtB6B,EAAS7B,EAAI4D,OAAb/B,MACPpD,EAAYoF,aAAa,CACvB9J,KAAgB,SAAV8H,KAIV,OACE,kBAACO,EAAA,EAAD,CAAKI,UAAU,QAAQH,KAAK,IAAIzE,QAAQ,OAAOC,WAAW,SAASO,eAAe,aAAauE,cAAc,UAC3G,kBAAC,KAAD,CAAMmB,GAAG,WAAWzE,UAAU,gBAC9B,uBAAG0E,KAAK,+EAA+E1E,UAAU,WACjG,yBAAKA,UAAU,kBACb,kBAAC0C,GAAD,CACE1C,UAAWb,EAAQ8E,MACnBzB,MAAM,OACNK,QAASwB,EAAS7J,OAAOE,KACzBoI,SAAUwB,IAGZ,kBAAC5B,GAAD,CACE1C,UAAWb,EAAQ8E,MACnBzB,MAAM,WACNK,SAAUwB,EAAS7J,OAAOE,KAC1BoI,SAAUwB,KAId,kBAACvB,EAAA,EAAD,CAAKI,UAAU,KAAKH,KAAK,IAAIzE,QAAQ,OAAOC,WAAW,SAASO,eAAe,SAASuE,cAAc,UACpG,kBAACqB,EAAA,EAAD,CAAa3E,UAAWC,YAAKd,EAAQuE,MAAOvE,EAAQ0E,OAClD,kBAACe,EAAA,EAAD,CAAYC,QAAQ,eAApB,wBACA,kBAACC,EAAA,EAAD,CACE3E,GAAG,cACH4E,KAAK,cACLC,aAAcX,EAAS7J,OAAOG,YAC9BmI,SAAU,SAACnC,GACTvB,EAAYoF,aAAa,CAAC7J,YAAagG,EAAI4D,OAAO/B,YAGxD,kBAACmC,EAAA,EAAD,CAAa3E,UAAWb,EAAQ0E,MAC9B,kBAACoB,EAAA,EAAD,CAAQzE,QAjDI,WACb6D,EAAS7J,OAAOG,aAKrByE,EAAY8F,eACZd,EAAUe,QAAQC,KAAK,CAACC,SAAS,YAAD,OAAchB,EAAS7J,OAAOG,gBAL5DyE,EAAYkG,WAAZ,6BA+CkChG,QAAQ,YAAYiB,MAAM,UAAUP,UAAWb,EAAQ2E,QAArF,2B,8DCnKJyB,GAAQ1K,+CAAY2K,uBAC1BC,QAAQC,IAAI,sBAAwBC,KAASC,QAAU,gBAAkBD,KAASE,2B,IAC7DC,G,WACnB,aAAe,qBACbC,KAAKC,QAAU,KACfD,KAAKE,SAAU,EACfF,KAAKG,aAAe,KACpBH,KAAKI,QAAU,GACfJ,KAAKK,KAAO,EACZL,KAAKM,UAAY,IAAIC,KACrBP,KAAKQ,cAAe,EACpBR,KAAKS,aAAc,EACnBT,KAAKU,UAAW,E,0DAGLC,GAEX,OADAX,KAAKC,QAAUL,KAASgB,aAAa,CAAExL,KAAMuL,EAAKvL,KAAMC,MAAOsL,EAAKtL,QAC7D2K,KAAKC,U,gCAIZD,KAAKU,UAAW,EAChBV,KAAKC,QAAU,O,yBAGdrF,EAAKiG,IAM6B,IALd,CACnB,oBACA,wBAGeC,QAAQlG,GAKzBoF,KAAKC,QAAQc,GAAGnG,EAAKiG,GAJnBb,KAAKM,UAAUS,GAAGnG,EAAKiG,K,oCAObG,GACZhB,KAAKC,QAAQgB,cAAcD,K,sCAGbL,GAAO,IAAD,OACpB,OAAO,IAAIO,SAAQ,SAACC,EAASC,GAC3B,EAAKf,KAAO,EAAKF,aAAe,EAAKA,aAAahK,QAAUwK,EAAKjM,IAC7D,EAAKyL,eACP,EAAKkB,YACD,EAAKlB,aAAazJ,aACpB,EAAKyJ,aAAaxJ,OAEpB,EAAKwJ,aAAavJ,SAGpB,IAAM0K,EAAY1B,KAAS2B,aAAa,CACtCC,SAAU,EAAKnB,KACfoB,OAAO,EACPC,OAAO,EACPlM,QAAQ,EACRR,aAAc2L,EAAK3L,aACnBC,SAAU0L,EAAK1L,WAGb0L,EAAKzL,YAAkC,YAApByL,EAAKzL,YAC1BoM,EAAUK,gBAAgBhB,EAAKzL,YAIjCoM,EAAUM,MAAK,WACb,EAAKzB,aAAemB,EACpB,EAAKhB,UAAUuB,KAAK,oBAAqB,CAAEtL,OAAQ,EAAK4J,gBACjC,IAAnBQ,EAAKrL,WACP,EAAK6K,aAAa7K,aAEG,IAAnBqL,EAAKpL,WACP,EAAK4K,aAAa5K,YAEpB4L,OACC,SAACW,GACFV,EAAOU,GAEPpC,QAAQvI,MAAM,4BAA6B2K,W,gDAKvBnB,GAAO,IAAD,OAC9B,OAAO,IAAIO,SAAQ,SAACC,EAASC,GAE3B,EAAKf,KAAO,EAAKF,aAAe,EAAKA,aAAahK,QAAUwK,EAAKjM,IAC7D,EAAKyL,eACP,EAAKE,KAAO,EAAKF,aAAahK,QAC9B,EAAKkL,YACD,EAAKlB,aAAazJ,aACpB,EAAKyJ,aAAaxJ,OAEpB,EAAKwJ,aAAavJ,SAEpB,IAAMmL,EAAsBnC,KAAS2B,aAAa,CAChDC,SAAU,EAAKnB,KACfoB,OAAO,EACPC,OAAO,EACPlM,QAAQ,EACRR,aAAc2L,EAAK3L,aACnBC,SAAU0L,EAAK1L,WAGb0L,EAAKzL,YAAkC,YAApByL,EAAKzL,YAC1B6M,EAAoBC,iBAApB,UAAwCrB,EAAKzL,WAA7C,OAGF6M,EAAoBhB,GAAG,qBAAqB,SAACnG,GAC3C,EAAK0F,UAAUuB,KAAK,oBAAqBjH,MAI3CmH,EAAoBH,MAAK,WACvB,EAAKzB,aAAe4B,EAGpB,EAAKzB,UAAUuB,KAAK,oBAAqB,CAAEtL,OAAQ,EAAK4J,eACxDgB,OACC,SAACW,GACFX,EAAQW,W,gCAKJvL,EAAQsK,GAChBb,KAAKC,QAAQgC,UAAU1L,EAAQsK,K,yCAGb,IAAD,OAEjB,OADAb,KAAKK,KAAO,EACL,IAAIa,SAAQ,SAACC,EAASC,GACvB,EAAKjB,cACP,EAAKA,aAAavJ,QAGpB,IAAMsL,EAAatC,KAAS2B,aAAa,CACvCC,SAAU,EAAKnB,KACfoB,OAAO,EACPC,OAAO,EACPlM,QAAQ,IAIV0M,EAAWN,MAAK,WACd,EAAKzB,aAAe+B,EACpBf,OACC,SAACW,GACFV,EAAOU,GAEPpC,QAAQvI,MAAM,4BAA6B2K,W,mCAKlC,IAAD,OACZ,OAAO,IAAIZ,SAAQ,SAACC,EAASC,GACtB,EAAKnB,SACR,EAAKW,aAAa,CAACvL,MAAO,OAAQD,KAAM,SAC1C,EAAK+M,mBAAmBC,MAAK,WAC3BxC,KAASyC,YAAW,SAACC,GACnB,EAAKnC,aAAavJ,QAClBuK,EAAQmB,c,2BAMX3B,GAAO,IAAD,OAET,OADAX,KAAKE,QAAU,UACR,IAAIgB,SAAQ,SAACC,EAASC,GAU3B,EAAKhB,QAAUO,EAMf,EAAKV,QAAQ2B,KAAKpC,IAAO,WAqBvB,EAAKS,QAAQsC,KAAK5B,EAAK9L,MAAQ8L,EAAK9L,MAAQ,KAAM8L,EAAK6B,QAAS7B,EAAKjM,KAAOiM,EAAKjM,IAAM,MAAM,SAACA,GAC5F,EAAK2L,KAAO3L,EAEZgL,QAAQC,IAAI,iBAAmBgB,EAAK6B,QAAU,kBAAoB9N,GAClE,EAAKwL,SAAU,EAEfS,EAAKjM,IAAMA,EAEPiM,EAAKhM,KACP,EAAK8N,gBAAgB9B,GAAMyB,MAAK,WAC9BjB,OACCuB,OAAM,SAACZ,GACRV,EAAOU,MAGTX,OAED,SAACW,GACF,EAAK5B,SAAU,EACfkB,EAAOU,GACPpC,QAAQvI,MAAM,qBAAsB2K,SAErC,SAACA,GACF,EAAK5B,SAAU,EACfkB,EAAOU,GACPpC,QAAQvI,MAAM2K,W,gCAOlB9B,KAAKC,QAAQ0C,QAAQ3C,KAAKG,cAAc,SAAC2B,GACvCpC,QAAQvI,MAAM2K,Q,kCAKX9B,KAAKC,SAGVD,KAAKC,QAAQoB,UAAUrB,KAAKG,cAAc,SAAC2B,GACzCpC,QAAQvI,MAAM2K,Q,8BAIT,IAAD,OACN,OAAO,IAAIZ,SAAQ,SAAAC,GAEjB,EAAKlB,QAAQ2C,OAAM,WACjB,EAAK1C,SAAU,EACf,EAAK2C,UACL1B,OACC,SAACW,GACFpC,QAAQC,IAAI,wBACZD,QAAQvI,MAAM2K,a,iDCpPhBxG,GAAY9D,aAAW,SAAAC,GAAK,MAAK,CACrCqL,UAAW,CACTtI,MAAO,UACPuI,UAAW,SACX7K,SAAU,cACV8K,SAAU,WACVC,IAAK,OAEP7F,UAAW,CACTA,UAAW,gBAEb8F,KAAM,CACJ1H,OAAQ,WACRwH,SAAU,WACVtH,OAAQ,OACRlD,QAAS,OACTQ,eAAgB,SAChBP,WAAY,UAEd0K,KAAM,CACJ/F,UAAW,SACXC,aAAc,SACd+F,aAAc,qBAEhBC,GAAI,CACFD,aAAc,qBAEhBE,WAAY,CACV/F,cAAe,yBACfgG,WAAY,eACZlL,YAAa,eACbW,eAAgB,qBAIdwK,GAAe5G,aAAW,SAAAnF,GAAK,MAAK,CACxCoF,KAAM,CACJlB,MAAO,GACPD,OAAQ,GACRzC,QAAS,EACTuC,OAAQ/D,EAAMa,QAAQ,IAExBmL,WAAY,CACVxK,QAAS,EACT,YAAa,CACXyK,UAAW,mBACXlJ,MAAO/C,EAAMG,QAAQ+L,OAAOC,MAC5B,aAAc,CACZlM,gBAAiB,UACjBU,QAAS,EACTyL,OAAQ,SAGZ,wBAAyB,CACvBrJ,MAAO,UACPqJ,OAAQ,mBAGZC,MAAO,CACLnI,MAAO,GACPD,OAAQ,IAEVqI,MAAO,CACLhL,aAAc,GACd8K,OAAO,aAAD,OAAepM,EAAMG,QAAQoM,KAAK,MACxCtM,gBAAiBD,EAAMG,QAAQoM,KAAK,IACpC5L,QAAS,EACT6L,WAAYxM,EAAMyM,YAAYC,OAAO,CAAC,mBAAoB,YAE5DrH,QAAS,GACTsH,aAAc,MAnCKxH,EAoCjB,YAA4B,IAAzBxD,EAAwB,EAAxBA,QAAYD,EAAY,2BAC7B,OACE,kBAACkL,GAAA,EAAD,eACEC,sBAAuBlL,EAAQgL,aAC/BhL,QAAS,CACPyD,KAAMzD,EAAQyD,KACd4G,WAAYrK,EAAQqK,WACpBK,MAAO1K,EAAQ0K,MACfC,MAAO3K,EAAQ2K,MACfjH,QAAS1D,EAAQ0D,UAEf3D,OAKK,SAASoL,KAEtB,IAAMnL,EAAUkC,KAEVgD,EAAWrC,IAEX5C,EAAcC,IANiB,EC1GxB,WACb,IAAMgF,EAAWrC,IACX5C,EAAcC,IAEdvD,EAASyO,mBAAQ,WAErB,OADmB,IAAIzE,KAEtB,IAPiC,EASCyE,mBAAQ,WAC3C,MAAO,CACLlG,EAAS9J,YACRyB,QAAO,SAAC8E,GAAD,MAAwB,eAAdA,EAAK0J,QACtB3J,KAAI,SAACC,EAAM2J,GAAP,MAAgB,CACnBjI,MAAO1B,EAAK4J,SACZC,MAAO7J,EAAK6J,MAAQ7J,EAAK6J,MAAlB,sBAAyCF,OAElDpG,EAAS9J,YACRyB,QAAO,SAAC8E,GAAD,MAAwB,eAAdA,EAAK0J,QACtB3J,KAAI,SAACC,EAAM2J,GAAP,MAAgB,CACnBjI,MAAO1B,EAAK4J,SACZC,MAAO7J,EAAK6J,MAAQ7J,EAAK6J,MAAlB,sBAAyCF,UAGnD,CAACpG,EAAS9J,cAxBuB,mBAS7BqQ,EAT6B,KASjBC,EATiB,KAiDpC,OAvBAnL,qBAAU,WACR,KAAIkL,EAAWxO,OAAS,GAAKyO,EAAezO,OAAS,GAIrD,OAHAN,EAAOsM,aAAaD,MAAK,SAACE,GACxBjJ,EAAY0L,eAAezC,MAEtB,WACLvM,EAAO8M,aAER,CAACiC,EAAgBzL,EAAawL,EAAY9O,IAE7C4D,qBAAU,YACJkL,EAAW,KACXC,EAAe,IACbxG,EAAS7J,OAAOQ,UAChBqJ,EAAS7J,OAAOO,eACpBqE,EAAYoF,aAAa,CACvBxJ,SAAU4P,EAAW,GAAGpI,MACxBzH,aAAc8P,EAAe,GAAGrI,QAElCpD,EAAY2L,iBAEb,CAAC3L,EAAaiF,EAAS9J,YAAa8J,EAAS7J,OAAQoQ,EAAYC,IAE7D,CAACD,EAAYC,GDiEmBG,GARF,mBAQ7BJ,EAR6B,KAQjBC,EARiB,KAUrC,OACE,kBAAC9H,EAAA,EAAD,CAAKC,KAAK,IAAIzE,QAAQ,OAAO+E,cAAc,UACzC,kBAAC,KAAD,CAAMmB,GAAG,IAAIzE,UAAU,aACvB,kBAAC+C,EAAA,EAAD,CAAKxE,QAAQ,OAAOyE,KAAK,IAAIM,cAAc,SAAStE,QAAQ,SAASD,eAAe,cACpF,kBAAC4F,EAAA,EAAD,CAAa3E,UAAWb,EAAQ8J,MAC9B,0BAAMjJ,UAAWb,EAAQ0J,WAAzB,YAEF,yBAAK7I,UAAWb,EAAQ+J,OACxB,kBAACvE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,cAApB,cACA,kBAACoG,GAAA,EAAD,CACEzI,MAAO6B,EAAS7J,OAAOS,WACvB6H,SAAU,SAACnC,GACTvB,EAAYoF,aAAa,CACvBvJ,WAAY0F,EAAI4D,OAAO/B,SAG3B0I,WAAY,CACVnG,KAAM,aACN5E,GAAI,eAGN,kBAACgL,GAAA,EAAD,CAAU3I,MAAO,QAAjB,QACA,kBAAC2I,GAAA,EAAD,CAAU3I,MAAO,QAAjB,QACA,kBAAC2I,GAAA,EAAD,CAAU3I,MAAO,SAAjB,WAGJ,kBAACmC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,SAApB,eACA,kBAACoG,GAAA,EAAD,CACEzI,MAAO6B,EAASjJ,MAChB0H,SAAU,SAACnC,GACTvB,EAAYgM,SAASzK,EAAI4D,OAAO/B,QAElC0I,WAAY,CACVnG,KAAM,QACN5E,GAAI,UAGN,kBAACgL,GAAA,EAAD,CAAU3I,MAAO,QAAjB,QACA,kBAAC2I,GAAA,EAAD,CAAU3I,MAAO,OAAjB,SAGJ,kBAACmC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,UAApB,UACA,kBAACoG,GAAA,EAAD,CACEzI,MAAO6B,EAAS7J,OAAOQ,SACvB8H,SAAU,SAACnC,GACTvB,EAAYoF,aAAa,CACvBxJ,SAAU2F,EAAI4D,OAAO/B,SAGzB0I,WAAY,CACVnG,KAAM,SACN5E,GAAI,WAGLyK,EAAW/J,KACV,SAACC,EAAMT,GAAP,OACE,kBAAC8K,GAAA,EAAD,CACE9K,IAAKA,EACLmC,MAAO1B,EAAK0B,OACZ1B,EAAK6J,YAIf,kBAAChG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,cAApB,cACA,kBAACoG,GAAA,EAAD,CACEzI,MAAO6B,EAAS7J,OAAOO,aACvB+H,SAAU,SAACnC,GACTvB,EAAYoF,aAAa,CACvBzJ,aAAc4F,EAAI4D,OAAO/B,SAG7B0I,WAAY,CACVnG,KAAM,aACN5E,GAAI,eAGL0K,EAAehK,KACd,SAACC,EAAMT,GAAP,OACE,kBAAC8K,GAAA,EAAD,CACE9K,IAAKA,EACLmC,MAAO1B,EAAK0B,OACZ1B,EAAK6J,YAIf,kBAAChG,EAAA,EAAD,KACE,kBAAC0G,GAAA,EAAD,CACEC,QACE,kBAAC/B,GAAD,CACE1G,QAASwB,EAAShJ,UAClByH,SAAU,WACR1D,EAAYmM,UAAUlH,EAAShJ,YAEjCmH,MAAO6B,EAAShJ,UAChBkF,MAAM,YAGVP,UAAWb,EAAQkK,WACnBsB,MAAM,UAER,yBAAK3K,UAAWb,EAAQiK,MAE1B,kBAACzE,EAAA,EAAD,KACE,kBAAC0G,GAAA,EAAD,CACEC,QACE,kBAAC/B,GAAD,CACE1G,QAASwB,EAAS/I,UAClBwH,SAAU,WACR1D,EAAYoM,UAAUnH,EAAS/I,YAEjCkH,MAAO6B,EAAS/I,UAChBiF,MAAM,YAGVP,UAAWb,EAAQkK,WACnBsB,MAAM,UAER,yBAAK3K,UAAWb,EAAQiK,MAE1B,kBAACzE,EAAA,EAAD,KACA,kBAAC0G,GAAA,EAAD,CACEC,QACE,kBAAC/B,GAAD,CACE1G,QAASwB,EAAS7I,QAClBsH,SAAU,WACR1D,EAAYqM,YAAYpH,EAAS7I,UAEnCgH,MAAO6B,EAAS7I,QAChB+E,MAAM,YAGVP,UAAWb,EAAQkK,WACnBsB,MAAM,YAEN,yBAAK3K,UAAWb,EAAQiK,QE3PhC,IAAM/H,GAAY9D,aAAW,SAAAC,GAAK,MAAK,CACrCyF,UAAW,CACT1C,MAAO,WAET2C,QAAS,CACPC,UAAW,OACXC,aAAc,QAEhBtC,KAAM,CACJkC,KAAM,EACNzE,QAAS,OACTC,WAAY,UAEd6E,UAAW,CACTzE,WAAW,oDACXJ,WAAY,SACZwE,KAAM,EACNzE,QAAS,OACT+E,cAAe,UAEjBC,aAAc,CACZhF,QAAS,OACTQ,eAAgB,SAChBuE,cAAe,SACf/C,MAAO,QAETmL,WAAY,CACV3C,SAAU,WACV/F,KAAM,EACNzE,QAAS,QAEXiD,UAAW,CACTjD,QAAS,OACTQ,eAAgB,SAChBP,WAAY,UAEdgF,KAAM,CACJjF,QAAS,OACTG,SAAU,IACVC,UAAW,IACX8E,UAAW,IACX3E,aAAc,OACdD,UAAW,oCAEb6E,MAAO,CACLC,SAAU,QACVjF,SAAU,QACVkF,UAAW,UAEbC,KAAM,CACJtC,OAAQ,gBAEVuC,OAAQ,CACNrC,OAAQ,OACRC,MAAO,QACP,UAAW,CACTjE,gBAAiB,WAEnB8D,OAAQ/D,EAAMa,QAAQ,GACtB8E,UAAW,OACX1F,gBAAiB,UACjBqB,aAAc,YAIH,SAAS6M,KACtB,IAAMxM,EAAUkC,KAEhB,OACE,kBAAC0B,EAAA,EAAD,CAAKxE,QAAQ,OAAOC,WAAW,SAASO,eAAe,UACrD,kBAAC6M,EAAA,EAAD,CAAM5L,UAAWb,EAAQqE,MACvB,kBAACT,EAAA,EAAD,CAAKxE,QAAQ,OAAOyE,KAAK,KACvB,yBAAKhD,UAAWb,EAAQkE,WACtB,yBAAKrD,UAAWb,EAAQ2B,MACtB,yBAAKd,UAAU,iBAEjB,yBAAKA,UAAWb,EAAQ2B,MACtB,yBAAKd,UAAWb,EAAQoE,cACtB,kBAACR,EAAA,EAAD,CAAK+F,UAAU,SAAS7K,SAAS,cAAc+B,UAAWb,EAAQ8D,WAAlE,cACA,kBAACF,EAAA,EAAD,CAAK+F,UAAU,SAAS+C,WAAW,oBAAoB5N,SAAS,cAAc+B,UAAWb,EAAQ+D,SAAjG,aACA,kBAACH,EAAA,EAAD,CAAK+F,UAAU,SAAS+C,WAAW,oBAAoB7L,UAAWb,EAAQ8D,UAAWhF,SAAS,eAA9F,0BAIN,yBAAK+B,UAAWb,EAAQuM,YACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,IAAIC,UAAW7H,KACjC,kBAAC,IAAD,CAAO4H,KAAK,WAAWC,UAAW1B,UCxFhD,IAAMjJ,GAAY9D,aAAW,iBAAO,CAClCiE,UAAW,CACTC,OAAQ,OACRC,MAAO,OACPhD,SAAU,IACVC,UAAW,IACXsN,UAAW,cACX1N,QAAS,OACTQ,eAAgB,cAsBLmN,GAlBD,WACZ,IAAM7H,EAAWrC,IACX5C,EAAcC,IACdF,EAAUkC,KAQhB,OANA3B,qBAAU,YACiB,IAArB2E,EAASnK,SACXkF,EAAY2L,gBAEb,CAAC1G,EAASnK,QAASkF,IAGpB,kBAAC+M,EAAA,EAAD,CAAWxI,SAAS,KAAK3D,UAAWb,EAAQqC,WAC1C,kBAAC,GAAD,QCxBS,SAAS4K,GAAclN,GAAQ,IACrC5C,EAAsB4C,EAAtB5C,OAAQ+P,EAAcnN,EAAdmN,MAAO5R,EAAOyE,EAAPzE,IADqB,EAGZ6R,oBAAS,GAHG,mBAGpCC,EAHoC,KAG5BC,EAH4B,OAKRF,oBAAS,GALD,mBAKpCG,EALoC,KAK1BC,EAL0B,OAmBjBJ,mBAAS,CACjCK,YAAa,EACbC,IAAK,EACL3R,WAAY,IAtB6B,mBAmBpCS,EAnBoC,KAmB7BmR,EAnB6B,KAyBrCC,EAAYvC,mBAAQ,kBAAM7O,IAAO,CAACA,IA+CxC,OA7CAgE,qBAAU,WAER,IAAMC,EAAQoN,aAAY,WACxBzQ,EAAO0Q,UAAS,SAACC,GACf,IAAMvL,EAAQxC,EAAMgO,MAAQD,EAAME,yBAA2BF,EAAMG,4BAC7D3L,EAASvC,EAAMgO,MAAQD,EAAMI,0BAA4BJ,EAAMK,6BAC/DV,EAAM1N,EAAMgO,MAAQD,EAAMM,mBAAqBN,EAAMO,sBAC3DX,EAAS,CACPF,YAAY,GAAD,OAAKM,EAAMN,YAAcM,EAAMN,YAAc,GACxD1R,WAAW,GAAD,OAAKyG,EAAL,YAAcD,GACxBmL,IAAI,GAAD,OAAKA,GAAY,UAGvB,KAEH,OAAO,WACLa,cAAc9N,MAEf,CAACrD,IAEJoD,qBAAU,WAWR,OAVKpD,EAAOG,YAQVH,EAAOI,OAPPJ,EAAOoR,KAAKrB,EAAO,CAACsB,IAAK,UAAU,SAACC,GAC9BA,GAAgC,YAApBA,EAASC,SACvBpI,QAAQC,IAAI,6BAA8B2G,GAC1CK,GAAe,OAMd,WACDpQ,EAAOG,YACTH,EAAOI,OAEPJ,EAAOoR,KAAKrB,EAAO,CAACsB,IAAK,UAAU,SAACC,GAC9BA,GAAgC,YAApBA,EAASC,SACvBpI,QAAQC,IAAI,6BAA8B2G,GAC1CK,GAAe,UAKtB,CAACpQ,EAAOG,YAAa4P,IAGtB,yBAAKrM,UAAS,wBAAmByM,EAAW,WAAY,IAAMtM,GAAIkM,EAAO7L,QAlEvD,WACdiM,IAAaF,IACfjQ,EAAOiQ,SACPC,GAAa,KA+DgFsB,cA3DvE,SAACnN,GACzBA,EAAIoN,kBACJ7O,EAAM4O,cAAcxR,KA0DjB4C,EAAMmD,SACNnD,EAAM8O,YACL,yBAAKhO,UAAWd,EAAMc,WACpB,+CAAqB8M,EAAUH,YAA/B,MACA,wCAAcG,EAAUF,IAAxB,OAAiCE,EAAU7R,aAE7C,KACDiE,EAAM+O,SAAWxT,EAAM,yBAAKuF,UAAU,cAAf,QAAkCvF,GAAa,MC/E7E,IAAM4G,GAAY9D,YAAW,CAC3B0L,KAAM,CACJxH,OAAQ,QACRlD,QAAS,OACTQ,eAAgB,SAChBP,WAAY,UAEd0P,UAAW,CACTxM,MAAO,OACPD,OAAQ,OACR3C,aAAc,OACdrB,gBAAiB,qBACjB0Q,eAAgB,OAChBC,OAAQ,WAEVC,UAAW,CACT9P,QAAS,OACTyE,KAAM,IACNjE,eAAgB,gBAElBuP,WAAY,CACV/P,QAAS,OACTyE,KAAM,IACNjE,eAAgB,UAElBwP,cAAe,CACb7M,MAAO,OACPD,OAAQ,OACRsH,SAAU,WACVxK,QAAS,OACT+E,cAAe,SACfvE,eAAgB,WAChByP,OAAQ,OAyLGC,GArLK,WAClB,IAAMtP,EAAUkC,KAEV+C,EAAYsK,KACZrK,EAAWrC,IACX5C,EAAcC,IAEdsP,EAAcpE,mBAAQ,WAC1B,IAAMzO,EAAS,IAAIgK,GAKnB,OAJKhK,EAAO2K,WACV3K,EAAO6K,aAAa,CAACvL,MAAOiJ,EAASjJ,MAAOD,KAAMkJ,EAASlJ,OAC3DW,EAAO2K,UAAW,GAEb3K,IACN,CAACuI,EAASjJ,MAAOiJ,EAASlJ,OAdL,EC1CX,SAAoBW,GACjC,IAAMuI,EAAWrC,IACX5C,EAAcC,IAFqB,EAIJ,CAACgF,EAASjK,YAAaiK,EAAShK,eAA9DD,EAJkC,KAIrBC,EAJqB,KAMnCC,EAAeiQ,mBACnB,kBAAMlG,EAASlK,QAAQ6B,QAAO,SAAAM,GAAM,OAAIA,EAAOJ,UAAY7B,EAAc6B,aACzE,CAACmI,EAAUhK,IAkCb,OA1BAqF,qBAAU,WAaJ5D,IAAiC,IAAvBA,EAAO0K,cAEnB1K,EAAOgL,GAAG,0BAA2B1H,EAAYwP,wBACjD9S,EAAOgL,GAAG,oBAAqB1H,EAAYyP,UAC3C/S,EAAOgL,GAAG,mBAAoB1H,EAAY0P,WAC1ChT,EAAOgL,GAAG,gBAjBY,SAACnG,GAAS,IACzBrE,EAAUqE,EAAVrE,OACPR,EAAOkM,UAAU1L,GAAQ,SAACuL,GACxBzI,EAAYkG,WAAZ,iBAAiC3E,EAAIrE,OAAOJ,QAA5C,8BAAyE2L,UAe3E/L,EAAOgL,GAAG,iBAAkB1H,EAAY2P,cACxCjT,EAAOgL,GAAG,oBAAqB1H,EAAY0P,WAC3ChT,EAAOgL,GAAG,aAAc1H,EAAY4P,kBACpClT,EAAO0K,aAAc,KAEtB,CAAC1K,EAAQsD,IAEL,CAAChF,EAAaC,EAAeC,GDgBC2U,CAAUN,GAhBvB,mBAgBjBvU,EAhBiB,KAgBJC,EAhBI,KAkBlBG,EAAS+P,mBAAQ,WACrB,MAAO,CACL3P,MAAOyJ,EAAS7J,OAAOI,MACvB2N,QAASlE,EAAS7J,OAAOG,YACzBI,aAAcsJ,EAAS7J,OAAOO,aAC9BC,SAAUqJ,EAAS7J,OAAOQ,SAC1BC,WAAYoJ,EAAS7J,OAAOS,WAC5BI,UAAWgJ,EAAShJ,UACpBC,UAAW+I,EAAS/I,UACpBb,IAAK,EACLC,KAAM2J,EAAS7J,OAAOE,QAEvB,CAAC2J,IAEEc,EAAUf,EAAUe,QAE1BzF,qBAAU,WACHlF,EAAO+N,SACVpD,EAAQC,KAAK,OAEd,CAAC5K,EAAO+N,QAASpD,IAEpBzF,qBAAU,WACJlF,EAAO+N,SAAWoG,EAAYlI,WAAoC,IAAxBkI,EAAY1I,SACxD0I,EAAYrG,KAAK9N,GAAQ2N,MAAK,WAC5B3N,EAAOE,KACLiU,EAAY3H,cAAc,QAC1B2H,EAAY3H,cAAc,YACxBxM,EAAOE,MACTiU,EAAYjG,UAEdtJ,EAAY2L,iBACXtC,OAAM,SAACZ,GACRzI,EAAYkG,WAAZ,gBAAgCuC,EAAIzK,OACpCgH,EAAUe,QAAQC,KAAK,UAG1B,CAACuJ,EAAavP,EAAa5E,EAAQ4J,IAEtC,IAAM8K,EAAc,SAACnK,GACnB,OAAO,SAACpE,GAEN,OADAA,EAAIoN,kBACIhJ,GACN,IAAK,QACHV,EAAShJ,UAAYjB,EAAYiB,YAAcjB,EAAY+U,cAC3D/P,EAAYmM,UAAUlH,EAAShJ,WAC/B,MAEF,IAAK,QACHgJ,EAAS/I,UAAYlB,EAAYkB,YAAclB,EAAYgV,cAC3DhQ,EAAYoM,UAAUnH,EAAS/I,WAC/B,MAEF,IAAK,SACC+I,EAAS9I,OACXoT,EAAYnG,gBAAgB,CAC1B5N,MAAO,KACP2N,QAASlE,EAAS7J,OAAOG,YACzBI,aAAcsJ,EAAS7J,OAAOO,aAC9BE,WAAYoJ,EAAS7J,OAAOS,WAC5BwM,MAAOpD,EAASoD,MAChBD,MAAOnD,EAASmD,QACfW,MAAK,WACNwG,EAAYjG,UACZtJ,EAAYiQ,WAAU,MACrB5G,OAAM,SAACZ,GACRpC,QAAQC,IAAImC,GACZzI,EAAYkG,WAAZ,gBAAgCuC,EAAIzK,OACpCgH,EAAUe,QAAQC,KAAK,QAGzBuJ,EAAYW,0BAA0B,CACpC1U,MAAO,KACP2N,QAASlE,EAAS7J,OAAOG,YACzBI,aAAcsJ,EAAS7J,OAAOO,aAC9BC,SAAUqJ,EAAS7J,OAAOQ,SAC1BC,WAAYoJ,EAAS7J,OAAOS,aAC3BkN,MAAK,WACNwG,EAAYjG,UACZtJ,EAAYiQ,WAAU,MACrB5G,OAAM,SAACZ,GACRpC,QAAQC,IAAImC,GACZzI,EAAYkG,WAAZ,gBAAgCuC,EAAIzK,OACpCgH,EAAUe,QAAQC,KAAK,QAG3B,MAEF,IAAK,UACH,MAEF,QACE,MAAM,IAAIxI,MAAJ,uCAA0CmI,OAKlDwK,EAAoB,SAACjT,GACzB8C,EAAYoQ,iBAAiBlT,IAGzBhC,EAAeiQ,mBAAQ,WAC3B,OAAOlG,EAASlK,QAAQ6B,QAAO,SAAAC,GAAE,OAAIA,EAAGC,UAAY7B,EAAc6B,aACjE,CAAC7B,EAAegK,IAEnB,OACE,yBAAKrE,UAAU,WACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,eAAf,cACA,yBAAKA,UAAU,UAEjB,yBAAKA,UAAU,OAAOQ,QAAS,WAC7BmO,EAAYhG,QAAQR,MAAK,WACvB/I,EAAYqQ,iBACZrL,EAAUe,QAAQC,KAAK,YAI5B/K,EACC,kBAAC+R,GAAD,CACEpM,UAAW,sBACXgO,YAAa3J,EAAS7I,QACtB0R,QAAO1S,EAAOE,MAAOL,EAAc6B,UAAY9B,EAAY8B,QAC3DI,OAAQjC,EACRyT,cAAeyB,EACf9U,IAAKJ,EAAc6B,QACnBmQ,MAAK,wBAAmBhS,EAAc6B,UACtC,yBAAK8D,UAAWb,EAAQoP,eACrB/T,EAAOE,MAAQ,yBAAKsF,UAAWb,EAAQ8J,MACpC,uBAAGzI,QAAS0O,EAAY,SAAUlP,UAAWC,YAAKd,EAAQ+O,UAAW,kBAAmB7J,EAAShJ,UAAY,aAAe,kBAC5H,uBAAGmF,QAAS0O,EAAY,SAAUlP,UAAWC,YAAKd,EAAQ+O,UAAW7J,EAAS/I,UAAY,aAAe,oBAK/G,yBAAK0E,UAAU,oBACZ1F,EAAauG,KAAI,SAACvE,EAAQyE,GAAT,OAChB,kBAACqL,GAAD,CACEpM,UAAW,iBACXgO,YAAa3J,EAAS7I,QACtB0R,QAAO1S,EAAOE,MAAO4B,EAAOJ,UAAY9B,EAAY8B,QACpDmE,IAAKU,EACLzE,OAAQA,EACRG,UAAWH,EAAOG,YAClBhC,IAAK6B,EAAOJ,QACZmQ,MAAK,wBAAmB/P,EAAOJ,SAC/B4R,cAAeyB,EACftB,SAAS,SAKC,QEzMbyB,OAXf,WACE,OACE,kBAAC,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO5D,OAAK,EAACC,KAAK,iBAAiBC,UAAW2D,KAC9C,kBAAC,IAAD,CAAO5D,KAAK,IAAIC,UAAWE,QCCf0D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,uBChBSC,gBAAe,CAC5BC,WAAY,CACX,WAAc,oLACd,SAAY,GACZ,gBAAmB,IACnB,kBAAqB,IACrB,iBAAoB,IACpB,MAAS,QAGVC,UAAW,CAOTC,eAAgB,CACdxN,KAAM,CACJrB,OAAQ,aAUZ8O,SAAU,CAMRC,UAAW,CACT,WAAY,CACVnH,aAAc,qBAEhB,0DAA2D,CACzDA,aAAa,qBAEf,YAAa,CACX,UAAW,CACTA,aAAc,2BCrC1BoH,IAASC,OACP,kBAACC,GAAA,EAAD,CAAejT,MAAOkT,IACpB,mBdH6B,SAAC,GAAgB,IAAfrO,EAAc,EAAdA,SAAc,EACrBsO,qBAAWlV,EAASxB,GADC,mBACxCyB,EADwC,KACjCkV,EADiC,OAGhBtE,mBAAS,IAHO,mBAGxC1L,EAHwC,KAGhCiQ,EAHgC,KAKzCC,EAAU,CACd5L,aADc,WAEZ0L,EAAS,CAAChV,KAAM,UAAWC,SAAS,KAEtCkP,YAJc,WAKZ6F,EAAS,CAAChV,KAAM,UAAWC,SAAS,KAEtC2I,aAPc,SAODuM,GACXH,EAAS,CAAChV,KAAM,SAAUC,QAAQ,KAAKH,EAAMlB,OAAZ,GAAuBuW,MAE1DC,UAVc,SAUJC,GACRL,EAAS,CAAChV,KAAM,SAAUC,QAASoV,KAErC7F,SAbc,SAaL8F,GACPN,EAAS,CAAChV,KAAM,QAASC,QAASqV,KAEpC3F,SAhBc,SAgBL2F,GACPN,EAAS,CAAChV,KAAM,QAASC,QAASqV,KAEpC1F,SAnBc,SAmBL0F,GACPN,EAAS,CAAChV,KAAM,QAASC,QAASqV,KAEpC7B,UAtBc,SAsBJ6B,GACRN,EAAS,CAAChV,KAAM,SAAUC,QAASqV,KAErCzF,WAzBc,SAyBHyF,GACTN,EAAS,CAAChV,KAAM,UAAWC,QAASqV,KAEtCC,aA5Bc,SA4BD7S,GACXuS,EAAa,GAAD,mBACPjQ,GADO,CAEV,CACEtB,QAAS,UACThB,eAIN8S,UArCc,SAqCJ9S,GACRuS,EAAa,GAAD,mBACPjQ,GADO,CAEV,CACEtB,QAAS,OACThB,eAINgH,WA9Cc,SA8CHhH,GACTuS,EAAa,GAAD,mBACPjQ,GADO,CAEV,CACEtB,QAAS,QACThB,eAINuB,UAvDc,WAwDZ,IAAMwR,EAAQzQ,EAAO5E,QAAO,SAACsV,EAAG7G,GAAJ,OAAYA,EAAM,KAC9CoG,EAAa,YACRQ,KAGPE,eA7Dc,SA6DCL,GACbN,EAAS,CAAChV,KAAM,cAAeC,QAASqV,KAE1C1B,iBAhEc,SAgEG0B,GACfN,EAAS,CAAChV,KAAM,gBAAiBC,QAASqV,KAE5CpG,eAnEc,SAmECoG,GACbN,EAAS,CAAChV,KAAM,cAAeC,QAASqV,KAE1CzB,eAtEc,WAuEZmB,EAAS,CAAChV,KAAM,oBAElBiT,SAzEc,SAyEJlO,GAAM,IACPrE,EAAUqE,EAAVrE,OACPwU,EAAQS,eAAejV,GACvBwU,EAAQtB,iBAAiBlT,IAE3BwS,UA9Ec,SA8EHnO,GAAM,IACRrE,EAAUqE,EAAVrE,OACPsU,EAAS,CAAChV,KAAM,YAAaC,QAASS,KAExCyS,aAlFc,SAkFApO,GAAM,IACXrE,EAAUqE,EAAVrE,OACPsU,EAAS,CAAChV,KAAM,eAAgBU,OAAQA,KAE1C0S,iBAtFc,SAsFIrO,GAAM,IACfrE,EAAUqE,EAAVrE,OACPsU,EAAS,CAAChV,KAAM,eAAgBnB,IAAK6B,KAEvCsS,uBA1Fc,SA0FUjO,GACtBmQ,EAAQM,UAAR,UAAqBzQ,EAAI6Q,aAI7B,OACE,kBAAC3P,EAAaU,SAAd,CAAuBC,MAAO9G,GAC5B,kBAACqG,EAAgBQ,SAAjB,CAA0BC,MAAOsO,GAC/B,kBAACrQ,EAAD,CAAoBG,OAAQA,IAC3BlF,EAAMxB,QAAU,kBAAC,EAAD,MAAa,KAC7BmI,MctGL,KACE,kBAAC,GAAD,QAGJoP,SAASC,eAAe,SFkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1J,MAAK,SAAA2J,GACjCA,EAAaC,iB","file":"static/js/main.d7010478.chunk.js","sourcesContent":["const defaultState = {\n  // loading effect\n  loading: false,\n  // media devices\n  streams: [],\n  localStream: null,\n  currentStream: null,\n  otherStreams: [],\n  devicesList: [],\n  // web sdk params\n  config: {\n    uid: 0,\n    host: true,\n    channelName: '',\n    token: process.env.REACT_APP_AGORA_APP_TOKEN,\n    microphoneId: '',\n    cameraId: '',\n    resolution: '480p'\n  },\n  agoraClient: null,\n  mode: 'live',\n  codec: 'h264',\n  muteVideo: true,\n  muteAudio: true,\n  screen: false,\n  profile: false,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'config': {\n      return {...state, config: action.payload};\n    }\n    case 'client': {\n      return { ...state, client: action.payload };\n    }\n    case 'loading': {\n      return { ...state, loading: action.payload };\n    }\n    case 'codec': {\n      return { ...state, codec: action.payload };\n    }\n    case 'video': {\n      return { ...state, muteVideo: action.payload };\n    }\n    case 'audio': {\n      return { ...state, muteAudio: action.payload };\n    }\n    case 'screen': {\n      return { ...state, screen: action.payload };\n    }\n    case 'devicesList': {\n      return {...state, devicesList: action.payload};\n    }\n    case 'localStream': {\n      return { ...state, localStream: action.payload };\n    }\n    case 'profile': {\n      return { ...state, profile: action.payload };\n    }\n    case 'currentStream': {\n      const {streams} = state;\n      const newCurrentStream = action.payload;\n      let otherStreams = streams.filter(it => it.getId() !== newCurrentStream.getId());\n      return { ...state, currentStream: newCurrentStream, otherStreams };\n    }\n    case 'addStream': {\n      const {streams, currentStream} = state;\n      const newStream = action.payload;\n      let newCurrentStream = currentStream;\n      if (!newCurrentStream) {\n        newCurrentStream = newStream;\n      }\n      if (streams.length === 4) return { ...state };\n      let newStreams = [...streams, newStream];\n      let otherStreams = newStreams.filter(it => it.getId() !== newCurrentStream.getId());\n      return { ...state, streams: newStreams, currentStream: newCurrentStream, otherStreams};\n    }\n    case 'removeStream': {\n      const {streams, currentStream} = state;\n      const {stream, uid} = action;\n      const targetId = stream ? stream.getId() : uid;\n      let newCurrentStream = currentStream;\n      const newStreams = streams\n        .filter((stream) => (stream.getId() !== targetId));\n      if (targetId === currentStream.getId()) {\n        if (newStreams.length === 0) {\n          newCurrentStream = null;\n        } else {\n          newCurrentStream = newStreams[0];\n        }\n      }\n      let otherStreams = newCurrentStream ? newStreams.filter(it => it.getId() !== newCurrentStream.getId()) : [];\n      return { ...state, streams: newStreams, currentStream: newCurrentStream, otherStreams};\n    }\n    case 'clearAllStream': {\n      const {streams, localStream, currentStream} = state;\n      streams.forEach((stream) => {\n        if (stream.isPlaying()) {\n          stream.stop();\n        }\n        stream.close();\n      });\n\n      if (localStream) {\n        localStream.isPlaying() &&\n        localStream.stop();\n        localStream.close();\n      }\n      if (currentStream) {\n        currentStream.isPlaying() &&\n        currentStream.stop();\n        currentStream.close();\n      }\n      return { ...state, currentStream: null, localStream: null, streams: []};\n    }\n    default:\n      throw new Error(\"mutation type not defined\")\n  }\n};\n\nexport {\n  reducer,\n  defaultState,\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { amber, green } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useGlobalMutation } from '../utils/container';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  customSnackbar: {\n    minWidth: '180px !important',\n    minHeight: '40px !important',\n    background: 'rgba(0,0,0,0.7)',\n    boxShadow: '0px 2px 4px 0px rgba(42,62,84,0.24)',\n    borderRadius: '30px',\n    justifyContent: 'center',\n    padding: '0 11px'\n  }\n}));\n\nSnackbarWrapper.propTypes = {\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n};\n\nfunction SnackbarWrapper(props) {\n  const classes = useStyles1();\n  const mutationCtx = useGlobalMutation();\n  const { message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      mutationCtx.removeTop();\n    }, 1000)\n    return () => {\n      clearTimeout(timer);\n    }\n  }, [mutationCtx]);\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], classes.customSnackbar)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          {variant === 'error' ? <i className=\"error-icon\" /> :\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />}\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={() => {\n          mutationCtx.removeTop();\n        }}>\n          <CloseIcon className={clsx(classes.icon)} />\n        </IconButton>\n      ]}\n      {...other}\n    />\n  );\n}\n\nexport default function CustomizedSnackbar(props) {\n\n  const handleClose = (evt) => {\n\n   }\n  return (\n    <>\n      {props.toasts.map((item, index) => \n        <Snackbar\n          key={index}\n          open={true}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          // onClose={handleClose}\n        >\n          <SnackbarWrapper\n            onClose={handleClose}\n            variant={item.variant}\n            message={`${item.message}`}\n          />\n        </Snackbar>\n      )}\n    </>\n  )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    margin: theme.spacing(2),\n    color: '#44A2FC'\n  },\n  container: {\n    height: '100%',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: '#666666',\n  }\n}));\n\nexport default function CircularLoading () {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <CircularProgress className={classes.progress} />\n    </div>\n  );\n}","import React, {createContext, useContext, useReducer, useState} from 'react';\nimport {reducer, defaultState} from './store';\nimport CustomizedSnackbar from '../utils/snackbar-wrapper';\nimport Loading from '../utils/loading';\n\nconst StateContext = createContext({});\nconst MutationContext = createContext({});\n\nexport const ContainerProvider = ({children}) => {\n  const [state, dispatch] = useReducer(reducer, defaultState);\n\n  const [toasts, updateToasts] = useState([]);\n\n  const methods = {\n    startLoading() {\n      dispatch({type: 'loading', payload: true});\n    },\n    stopLoading() {\n      dispatch({type: 'loading', payload: false});\n    },\n    updateConfig(params) {\n      dispatch({type: 'config', payload: {...state.config, ...params}});\n    },\n    setClient(clientInstance) {\n      dispatch({type: 'client', payload: clientInstance});\n    },\n    setCodec(param) {\n      dispatch({type: 'codec', payload: param});\n    },\n    setVideo(param) {\n      dispatch({type: 'video', payload: param});\n    },\n    setAudio(param) {\n      dispatch({type: 'audio', payload: param});\n    },\n    setScreen(param) {\n      dispatch({type: 'screen', payload: param});\n    },\n    setProfile(param) {\n      dispatch({type: 'profile', payload: param});\n    },\n    toastSuccess(message) {\n      updateToasts([\n        ...toasts,\n        {\n          variant: 'success',\n          message\n        }\n      ]);\n    },\n    toastInfo(message) {\n      updateToasts([\n        ...toasts,\n        {\n          variant: 'info',\n          message\n        }\n      ]);\n    },\n    toastError(message) {\n      updateToasts([\n        ...toasts,\n        {\n          variant: 'error',\n          message\n        }\n      ]);\n    },\n    removeTop() {\n      const items = toasts.filter((e, idx) => idx > 0)\n      updateToasts([\n        ...items\n      ]);\n    },\n    setLocalStream(param) {\n      dispatch({type: 'localStream', payload: param});\n    },\n    setCurrentStream(param) {\n      dispatch({type: 'currentStream', payload: param});\n    },\n    setDevicesList(param) {\n      dispatch({type: 'devicesList', payload: param});\n    },\n    clearAllStream() {\n      dispatch({type: 'clearAllStream'});\n    },\n    addLocal (evt) {\n      const {stream} = evt;\n      methods.setLocalStream(stream);\n      methods.setCurrentStream(stream);\n    },\n    addStream (evt) {\n      const {stream} = evt;\n      dispatch({type: 'addStream', payload: stream});\n    },\n    removeStream (evt) {\n      const {stream} = evt;\n      dispatch({type: 'removeStream', stream: stream});\n    },\n    removeStreamById (evt) {\n      const {stream} = evt;\n      dispatch({type: 'removeStream', uid: stream});\n    },\n    connectionStateChanged (evt) {\n      methods.toastInfo(`${evt.curState}`);\n    }\n  };\n\n  return (\n    <StateContext.Provider value={state}>\n      <MutationContext.Provider value={methods}>\n        <CustomizedSnackbar toasts={toasts} />\n        {state.loading ? <Loading />: null}\n        {children}\n      </MutationContext.Provider>\n    </StateContext.Provider>\n  )\n};\n\nexport function useGlobalState () {\n  return useContext(StateContext);\n};\n\nexport function useGlobalMutation () {\n  return useContext(MutationContext);\n};","import React, {useContext} from \"react\";\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom';\n\nexport const RouterContext = React.createContext({});\n\nexport const BrowserRouterHook = ({ children }) => (\n  <Router>\n    <Switch>\n      <Route>\n        {(routeProps) => (\n          <RouterContext.Provider value={routeProps}>\n            {children}\n          </RouterContext.Provider>\n        )}\n      </Route>\n    </Switch>\n  </Router>\n);\n\nexport default function useRouter() {\n  return useContext(RouterContext);\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport {useGlobalState, useGlobalMutation} from '../../utils/container';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Box from '@material-ui/core/Box';\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport useRouter from '../../utils/use-router';\nimport {Link} from 'react-router-dom';\n\nconst CustomRadio = withStyles({\n  root: {\n    color: '#999999',\n    '&$checked': {\n      color: '#44A2FC',\n    },\n    '&:hover': {\n      backgroundColor: 'inherit',\n    }\n  },\n})(({children, ...props}) => {\n  return (\n    <div className=\"role-item\">\n      <div className={`icon-${props.value}-${props.checked ? 'active' : 'inactive'}`}></div>\n      <div className={`radio-row ${props.value}`}>\n        <div className=\"custom-radio\">\n          <input type=\"radio\" value={props.value} checked={props.checked} onChange={props.onChange} />\n          <div className=\"checkmark\"></div>\n        </div>\n        <Box flex=\"1\" className={`role-name-${props.checked ? 'active' : 'inactive'}`}>{props.value}</Box>\n      </div>\n    </div>\n  );\n});\n\nconst useStyles = makeStyles(theme => ({\n  fontStyle: {\n    color: '#9ee2ff',\n  },\n  midItem: {\n    marginTop: '1rem',\n    marginBottom: '6rem',\n  },\n  item: {\n    flex: 1,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  coverLeft: {\n    background: `linear-gradient(to bottom, #307AFF, 50%, #46cdff)`,\n    alignItems: 'center',\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  coverContent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    color: '#fff',\n  },\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  card: {\n    display: 'flex',\n    minWidth: 700,\n    minHeight: 500,\n    maxHeight: 500,\n    borderRadius: '10px',\n    boxShadow: '0px 6px 18px 0px rgba(0,0,0,0.2)'\n  },\n  input: {\n    maxWidth: '250px',\n    minWidth: '250px',\n    alignSelf: 'center',\n  },\n  grid: {\n    margin: '0 !important',\n  },\n  button: {\n    lineHeight: '21px',\n    color:'rgba(255,255,255,1)',\n    fontSize: '17px',\n    textTransform: 'none',\n    height: '44px',\n    width: '260px',\n    '&:hover': {\n      backgroundColor: '#82C2FF',\n    },\n    margin: theme.spacing(1),\n    marginTop: '33px',\n    backgroundColor: '#44a2fc',\n    borderRadius: '30px'\n  },\n  radio: {\n    padding: '0',\n    fontSize: '14px',\n    // display: 'flex',\n    alignItems: 'center',\n    paddingRight: '5px',\n  }\n}));\n\nexport default function IndexCard () {\n  const classes = useStyles();\n\n  const routerCtx = useRouter();\n  const stateCtx = useGlobalState();\n  const mutationCtx = useGlobalMutation();\n\n  const handleClick = () => {\n    if (!stateCtx.config.channelName) {\n      mutationCtx.toastError(`You need enter the topic`)\n      return;\n    }\n\n    mutationCtx.startLoading();\n    routerCtx.history.push({pathname: `/meeting/${stateCtx.config.channelName}`});\n  }\n\n  const handleChange = (evt) => {\n    const {value} = evt.target;\n    mutationCtx.updateConfig({\n      host: value === 'host'\n    });\n  }\n\n  return (\n    <Box marginTop=\"114px\" flex=\"1\" display=\"flex\" alignItems=\"center\" justifyContent=\"flex-start\" flexDirection=\"column\">\n      <Link to=\"/setting\" className='setting-btn' />\n      <a href=\"https://github.com/AgoraIO/Basic-Video-Broadcasting/tree/master/OpenLive-Web\" className=\"github\"></a>\n      <div className=\"role-container\">\n        <CustomRadio\n          className={classes.radio}\n          value=\"host\"\n          checked={stateCtx.config.host}\n          onChange={handleChange}\n        >\n        </CustomRadio>\n        <CustomRadio\n          className={classes.radio}\n          value=\"audience\"\n          checked={!stateCtx.config.host}\n          onChange={handleChange}\n        >          \n        </CustomRadio>\n      </div>\n      <Box marginTop=\"92\" flex=\"1\" display=\"flex\" alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n        <FormControl className={clsx(classes.input, classes.grid)}>\n          <InputLabel htmlFor=\"channelName\">Pick a topic to chat</InputLabel>\n          <Input\n            id=\"channelName\"\n            name=\"channelName\"\n            defaultValue={stateCtx.config.channelName}\n            onChange={(evt) => {\n              mutationCtx.updateConfig({channelName: evt.target.value})\n            }}/>\n        </FormControl>\n        <FormControl className={classes.grid}>\n          <Button onClick={handleClick} variant=\"contained\" color=\"primary\" className={classes.button}>\n            Start Live Broadcast\n          </Button>\n        </FormControl>\n      </Box>\n    </Box>\n  )\n}","import AgoraRTC from 'agora-rtc-sdk';\nimport EventEmitter from 'events';\nconst appID = process.env.REACT_APP_AGORA_APP_ID;\nconsole.log(\"agora sdk version: \" + AgoraRTC.VERSION + \" compatible: \" + AgoraRTC.checkSystemRequirements());\nexport default class RTCClient {\n  constructor() {\n    this._client = null;\n    this._joined = false;\n    this._localStream = null;\n    this._params = {};\n    this._uid = 0;\n    this._eventBus = new EventEmitter();\n    this._showProfile = false;\n    this._subscribed = false;\n    this._created = false;\n  }\n\n  createClient(data) {\n    this._client = AgoraRTC.createClient({ mode: data.mode, codec: data.codec });\n    return this._client;\n  }\n\n  destroy() {\n    this._created = false; \n    this._client = null;\n  }\n\n  on(evt, callback) {\n    const customEvents = [\n      'localStream-added',\n      'screenShare-canceled'\n    ]\n\n    if (customEvents.indexOf(evt) !== -1) {\n      this._eventBus.on(evt, callback)\n      return;\n    }\n\n    this._client.on(evt, callback);\n  }\n\n  setClientRole(role) {\n    this._client.setClientRole(role);\n  }\n\n  createRTCStream(data) {\n    return new Promise((resolve, reject) => {\n      this._uid = this._localStream ? this._localStream.getId() : data.uid;\n      if (this._localStream) {\n        this.unpublish();\n        if (this._localStream.isPlaying()) {\n          this._localStream.stop();\n        }\n        this._localStream.close();\n      }\n      // create rtc stream\n      const rtcStream = AgoraRTC.createStream({\n        streamID: this._uid,\n        audio: true,\n        video: true,\n        screen: false,\n        microphoneId: data.microphoneId,\n        cameraId: data.cameraId\n      });\n\n      if (data.resolution && data.resolution !== 'default') {\n        rtcStream.setVideoProfile(data.resolution);\n      }\n\n      // init local stream\n      rtcStream.init(() => {\n        this._localStream = rtcStream;\n        this._eventBus.emit(\"localStream-added\", { stream: this._localStream });\n        if (data.muteVideo === false) {\n          this._localStream.muteVideo()\n        }\n        if (data.muteAudio === false) {\n          this._localStream.muteAudio()\n        }\n        resolve();\n      }, (err) => {\n        reject(err);\n        //Toast.error(\"stream init failed, please open console see more detail\");\n        console.error(\"init local stream failed \", err);\n      })\n    })\n  }\n\n  createScreenSharingStream(data) {\n    return new Promise((resolve, reject) => {\n      // create screen sharing stream\n      this._uid = this._localStream ? this._localStream.getId() : data.uid;\n      if (this._localStream) {\n        this._uid = this._localStream.getId();\n        this.unpublish();\n        if (this._localStream.isPlaying()) {\n          this._localStream.stop();\n        }\n        this._localStream.close();\n      }\n      const screenSharingStream = AgoraRTC.createStream({\n        streamID: this._uid,\n        audio: true,\n        video: false,\n        screen: true,\n        microphoneId: data.microphoneId,\n        cameraId: data.cameraId\n      });\n\n      if (data.resolution && data.resolution !== 'default') {\n        screenSharingStream.setScreenProfile(`${data.resolution}_1`);\n      }\n\n      screenSharingStream.on(\"stopScreenSharing\", (evt) => {\n        this._eventBus.emit(\"stopScreenSharing\", evt);\n      })\n\n      // init local stream\n      screenSharingStream.init(() => {\n        this._localStream = screenSharingStream\n        \n        // run callback\n        this._eventBus.emit(\"localStream-added\", { stream: this._localStream });\n        resolve();\n      }, (err) => {\n        resolve(err);\n      })\n    })\n  }\n\n  subscribe(stream, callback) {\n    this._client.subscribe(stream, callback);\n  }\n\n  _createTmpStream() {\n    this._uid = 0\n    return new Promise((resolve, reject) => {\n      if (this._localStream) {\n        this._localStream.close();\n      }\n      // create rtc stream\n      const _tmpStream = AgoraRTC.createStream({\n        streamID: this._uid,\n        audio: true,\n        video: true,\n        screen: false,\n      });\n\n      // init local stream\n      _tmpStream.init(() => {\n        this._localStream = _tmpStream;\n        resolve();\n      }, (err) => {\n        reject(err);\n        //Toast.error(\"stream init failed, please open console see more detail\");\n        console.error(\"init local stream failed \", err);\n      })\n    })\n  }\n\n  getDevices () {\n    return new Promise((resolve, reject) => {\n      if (!this._client)\n        this.createClient({codec: 'h264', mode: 'live'});\n      this._createTmpStream().then(() => {\n        AgoraRTC.getDevices((devices) => {\n          this._localStream.close();\n          resolve(devices);\n        })\n      })\n    });\n  }\n\n  join(data) {\n    this._joined = 'pending'\n    return new Promise((resolve, reject) => {\n\n      /**\n       * A class defining the properties of the config parameter in the createClient method.\n       * Note:\n       *    Ensure that you do not leave mode and codec as empty.\n       *    Ensure that you set these properties before calling Client.join.\n       *  You could find more detail here. https://docs.agora.io/en/Video/API%20Reference/web/interfaces/agorartc.clientconfig.html\n      **/\n\n      this._params = data;\n\n      // handle AgoraRTC client event\n      // this.handleEvents();\n\n      // init client\n      this._client.init(appID, () => {\n        /**\n         * Joins an AgoraRTC Channel\n         * This method joins an AgoraRTC channel.\n         * Parameters\n         * tokenOrKey: string | null\n         *    Low security requirements: Pass null as the parameter value.\n         *    High security requirements: Pass the string of the Token or Channel Key as the parameter value. See Use Security Keys for details.\n         *  channel: string\n         *    A string that provides a unique channel name for the Agora session. The length must be within 64 bytes. Supported character scopes:\n         *    26 lowercase English letters a-z\n         *    26 uppercase English letters A-Z\n         *    10 numbers 0-9\n         *    Space\n         *    \"!\", \"#\", \"$\", \"%\", \"&\", \"(\", \")\", \"+\", \"-\", \":\", \";\", \"<\", \"=\", \".\", \">\", \"?\", \"@\", \"[\", \"]\", \"^\", \"_\", \"{\", \"}\", \"|\", \"~\", \",\"\n         *  uid: number | null\n         *    The user ID, an integer. Ensure this ID is unique. If you set the uid to null, the server assigns one and returns it in the onSuccess callback.\n         *   Note:\n         *      All users in the same channel should have the same type (number) of uid.\n         *      If you use a number as the user ID, it should be a 32-bit unsigned integer with a value ranging from 0 to (232-1).\n        **/\n        this._client.join(data.token ? data.token : null, data.channel, data.uid ? +data.uid : null, (uid) => {\n          this._uid = uid;\n          //Toast.notice(\"join channel: \" + data.channel + \" success, uid: \" + uid);\n          console.log(\"join channel: \" + data.channel + \" success, uid: \" + uid);\n          this._joined = true;\n\n          data.uid = uid;\n\n          if (data.host) {\n            this.createRTCStream(data).then(() => {\n              resolve();\n            }).catch((err) => {\n              reject(err);\n            })\n          } else {\n            resolve();\n          }\n        }, (err) => {\n          this._joined = false;\n          reject(err);\n          console.error(\"client join failed\", err);\n        })\n      }, (err) => {\n        this._joined = false;\n        reject(err);\n        console.error(err);\n      });\n    })\n  }\n\n  publish() {\n    // publish localStream\n    this._client.publish(this._localStream, (err) => {\n      console.error(err);\n    })\n  }\n\n  unpublish() {\n    if (!this._client) {\n      return;\n    }\n    this._client.unpublish(this._localStream, (err) => {\n      console.error(err);\n    });\n  }\n\n  leave() {\n    return new Promise(resolve => {\n      // leave channel\n      this._client.leave(() => {\n        this._joined = false;\n        this.destroy();\n        resolve();\n      }, (err) => {\n        console.log(\"channel leave failed\");\n        console.error(err);\n      })\n    });\n  }\n}\n\n","import React from 'react';\nimport {useGlobalState, useGlobalMutation} from '../../utils/container';\nimport useDevices from '../../utils/use-devices';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Box from '@material-ui/core/Box';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Switch from '@material-ui/core/Switch';\nimport {Link} from 'react-router-dom';\n\nSettingsCard.propTypes = {\n  name: PropTypes.string,\n  resolution: PropTypes.string,\n  cameraDevice: PropTypes.string,\n  microphoneDevice: PropTypes.string,\n  video: PropTypes.bool,\n  audio: PropTypes.bool,\n};\n\nconst useStyles = makeStyles(theme => ({\n  menuTitle: {\n    color: '#333333',\n    textAlign: 'center',\n    fontSize: 'h6.fontSize',\n    position: 'relative',\n    top: '7px',\n  },\n  marginTop: {\n    marginTop: \"0 !important\"\n  },\n  menu: {\n    margin: '0.4rem 0',\n    position: 'relative',\n    height: '39px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  line: {\n    marginTop: '0.2rem',\n    marginBottom: '0.5rem',\n    borderBottom: '1px solid #EAEAEA'\n  },\n  hr: {\n    borderBottom: '1px solid #EAEAEA'\n  },\n  switchItem: {\n    flexDirection: 'row-reverse !important',\n    marginLeft: '0 !important',\n    marginRight: '0 !important',\n    justifyContent: 'space-between',\n  }\n}));\n\nconst CustomSwitch = withStyles(theme => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(16px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        backgroundColor: '#44A2FC',\n        opacity: 1,\n        border: 'none',\n      },\n    },\n    '&$focusVisible $thumb': {\n      color: '#52d869',\n      border: '6px solid #fff',\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border']),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n\nexport default function SettingsCard() {\n\n  const classes = useStyles();\n\n  const stateCtx = useGlobalState();\n\n  const mutationCtx = useGlobalMutation();\n\n  const [ cameraList, microphoneList ] = useDevices();\n\n  return (\n    <Box flex=\"1\" display=\"flex\" flexDirection=\"column\">\n      <Link to=\"/\" className='back-btn' />\n      <Box display=\"flex\" flex=\"1\" flexDirection=\"column\" padding=\"0 1rem\" justifyContent=\"flex-start\">\n      <FormControl className={classes.menu}>\n        <span className={classes.menuTitle}>Setting</span>\n      </FormControl>\n      <div className={classes.line}></div>\n      <FormControl>\n        <InputLabel htmlFor=\"resolution\">Resolution</InputLabel>\n        <Select\n          value={stateCtx.config.resolution}\n          onChange={(evt) => {\n            mutationCtx.updateConfig({\n              resolution: evt.target.value,\n            })\n          }}\n          inputProps={{\n            name: 'resolution',\n            id: 'resolution',\n          }}\n        >\n          <MenuItem value={\"480p\"}>480p</MenuItem>\n          <MenuItem value={\"720p\"}>720p</MenuItem>\n          <MenuItem value={\"1080p\"}>1080p</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl>\n        <InputLabel htmlFor=\"codec\">Video Codec</InputLabel>\n        <Select\n          value={stateCtx.codec}\n          onChange={(evt) => {\n            mutationCtx.setCodec(evt.target.value)\n          }}\n          inputProps={{\n            name: 'codec',\n            id: 'codec',\n          }}\n        >\n          <MenuItem value={\"h264\"}>h264</MenuItem>\n          <MenuItem value={\"vp8\"}>vp8</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl>\n        <InputLabel htmlFor=\"camera\">Camera</InputLabel>\n        <Select\n          value={stateCtx.config.cameraId}\n          onChange={(evt) => {\n            mutationCtx.updateConfig({\n              cameraId: evt.target.value\n            })\n          }}\n          inputProps={{\n            name: 'camera',\n            id: 'camera',\n          }}\n        >\n          {cameraList.map(\n            (item, key) =>\n              <MenuItem\n                key={key}\n                value={item.value}\n              >{item.label}</MenuItem>\n          )}\n        </Select>\n      </FormControl>\n      <FormControl>\n        <InputLabel htmlFor=\"Microphone\">Microphone</InputLabel>\n        <Select\n          value={stateCtx.config.microphoneId}\n          onChange={(evt) => {\n            mutationCtx.updateConfig({\n              microphoneId: evt.target.value\n            })\n          }}\n          inputProps={{\n            name: 'microphone',\n            id: 'microphone',\n          }}\n        >\n          {microphoneList.map(\n            (item, key) =>\n              <MenuItem\n                key={key}\n                value={item.value}\n              >{item.label}</MenuItem>\n          )}\n        </Select>\n      </FormControl>\n      <FormControl>\n        <FormControlLabel\n          control={\n            <CustomSwitch\n              checked={stateCtx.muteVideo}\n              onChange={() => {\n                mutationCtx.setVideo(!stateCtx.muteVideo)\n              }}\n              value={stateCtx.muteVideo}\n              color=\"primary\"\n            />\n          }\n          className={classes.switchItem}\n          label=\"Video\"\n        />\n        <div className={classes.hr}></div>\n      </FormControl>\n      <FormControl>\n        <FormControlLabel\n          control={\n            <CustomSwitch\n              checked={stateCtx.muteAudio}\n              onChange={() => {\n                mutationCtx.setAudio(!stateCtx.muteAudio)\n              }}\n              value={stateCtx.muteAudio}\n              color=\"primary\"\n            />\n          }\n          className={classes.switchItem}\n          label=\"Audio\"\n        />\n        <div className={classes.hr}></div>\n      </FormControl>\n      <FormControl>\n      <FormControlLabel\n        control={\n          <CustomSwitch\n            checked={stateCtx.profile}\n            onChange={() => {\n              mutationCtx.setProfile(!stateCtx.profile)\n            }}\n            value={stateCtx.profile}\n            color=\"primary\"\n          />\n        }\n        className={classes.switchItem}\n        label=\"Profile\"\n      />\n        <div className={classes.hr}></div>\n      </FormControl>\n    </Box>\n    </Box>\n  )\n}","import React, { useEffect, useMemo } from 'react';\nimport {useGlobalState, useGlobalMutation} from '../utils/container';\nimport RTCClient from '../rtc-client';\n\nexport default function useDevices () {\n  const stateCtx = useGlobalState();\n  const mutationCtx = useGlobalMutation();\n\n  const client = useMemo(() => {\n    const _rtcClient = new RTCClient()\n    return _rtcClient;\n  }, []);\n\n  const [cameraList, microphoneList] = useMemo(() => {\n    return [\n      stateCtx.devicesList\n      .filter((item) => item.kind === 'videoinput')\n      .map((item, idx) => ({\n        value: item.deviceId,\n        label: item.label ? item.label : `Video Input ${idx}`\n      })),\n      stateCtx.devicesList\n      .filter((item) => item.kind === 'audioinput')\n      .map((item, idx) => ({\n        value: item.deviceId,\n        label: item.label ? item.label : `Audio Input ${idx}`\n      }))\n    ];\n  }, [stateCtx.devicesList]);\n\n  useEffect(() => {\n    if (cameraList.length > 0 || microphoneList.length > 0) return;\n    client.getDevices().then((devices) => {\n      mutationCtx.setDevicesList(devices);\n    });\n    return () => {\n      client.destroy();\n    }\n  }, [microphoneList, mutationCtx, cameraList, client]);\n\n  useEffect(() => {\n    if (cameraList[0] &&\n        microphoneList[0] &&\n        (!stateCtx.config.cameraId ||\n         !stateCtx.config.microphoneId)) {\n      mutationCtx.updateConfig({\n        cameraId: cameraList[0].value,\n        microphoneId: microphoneList[0].value,\n      });\n      mutationCtx.stopLoading();\n    }\n  }, [mutationCtx, stateCtx.devicesList, stateCtx.config, cameraList, microphoneList]);\n\n  return [cameraList, microphoneList];\n}","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport IndexCard from './index-card';\nimport SettingsCard from './settings-card';\nconst useStyles = makeStyles(theme => ({\n  fontStyle: {\n    color: '#9ee2ff',\n  },\n  midItem: {\n    marginTop: '1rem',\n    marginBottom: '6rem',\n  },\n  item: {\n    flex: 1,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  coverLeft: {\n    background: `linear-gradient(to bottom, #307AFF, 50%, #46cdff)`,\n    alignItems: 'center',\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  coverContent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    color: '#fff',\n  },\n  coverRight: {\n    position: 'relative',\n    flex: 1,\n    display: 'flex',\n  },\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  card: {\n    display: 'flex',\n    minWidth: 700,\n    minHeight: 500,\n    maxHeight: 500,\n    borderRadius: '10px',\n    boxShadow: '0px 6px 18px 0px rgba(0,0,0,0.2)'\n  },\n  input: {\n    maxWidth: '250px',\n    minWidth: '250px',\n    alignSelf: 'center',\n  },\n  grid: {\n    margin: '0 !important',\n  },\n  button: {\n    height: '44px',\n    width: '260px',\n    '&:hover': {\n      backgroundColor: '#307AFF',\n    },\n    margin: theme.spacing(1),\n    marginTop: '33px',\n    backgroundColor: '#44a2fc',\n    borderRadius: '30px'\n  }\n}));\n\nexport default function CardPage() {\n  const classes = useStyles();\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n      <Card className={classes.card}>\n        <Box display=\"flex\" flex=\"1\">\n          <div className={classes.coverLeft}>\n            <div className={classes.item}>\n              <div className='cover-image' />\n            </div>\n            <div className={classes.item}>\n              <div className={classes.coverContent}>\n                <Box textAlign=\"center\" fontSize=\"h6.fontSize\" className={classes.fontStyle}>Welcome to</Box>\n                <Box textAlign=\"center\" fontWeight=\"fontWeightRegular\" fontSize=\"h4.fontSize\" className={classes.midItem}>OPEN LIVE</Box>\n                <Box textAlign=\"center\" fontWeight=\"fontWeightRegular\" className={classes.fontStyle} fontSize=\"h7.fontSize\">Powered by Agora.io</Box>\n              </div>\n            </div>\n          </div>\n          <div className={classes.coverRight}>\n            <Switch>\n              <Route exact path=\"/\" component={IndexCard}></Route>\n              <Route path=\"/setting\" component={SettingsCard}></Route>\n            </Switch>\n          </div>\n        </Box>\n      </Card>\n    </Box>\n  )\n}","import React, { useEffect } from 'react';\nimport { useGlobalState, useGlobalMutation } from '../utils/container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container } from '@material-ui/core';\nimport IndexCard from './index/card';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    height: '100%',\n    width: '100%',\n    minWidth: 800,\n    minHeight: 600,\n    boxSizing: 'content-box',\n    display: 'flex',\n    justifyContent: \"center\"\n  }\n}));\n\nconst Index = () => {\n  const stateCtx = useGlobalState();\n  const mutationCtx = useGlobalMutation();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (stateCtx.loading === true) {\n      mutationCtx.stopLoading();\n    }\n  }, [stateCtx.loading, mutationCtx]);\n\n  return (\n    <Container maxWidth=\"sm\" className={classes.container}>\n      <IndexCard />\n    </Container>\n  )\n};\n\nexport default Index;","import React, {useMemo, useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\n\nStreamPlayer.propTypes = {\n  stream: PropTypes.object,\n}\n\nexport default function StreamPlayer (props) {\n  const {stream, domId, uid} = props;\n\n  const [resume, changeResume] = useState(false);\n\n  const [autoplay, changeAutoplay] = useState(false);\n\n  const handleClick = () => {\n    if (autoplay && !resume) {\n      stream.resume();\n      changeResume(true);\n    }\n  }\n\n  const handleDoubleClick = (evt) => {\n    evt.stopPropagation();\n    props.onDoubleClick(stream);\n  }\n\n  const [state, setState] = useState({\n    accessDelay: 0,\n    fps: 0,\n    resolution: 0,    \n  });\n\n  const analytics = useMemo(() => state, [state]);\n\n  useEffect(() => {\n\n    const timer = setInterval(() => {\n      stream.getStats((stats) => {\n        const width = props.local ? stats.videoSendResolutionWidth : stats.videoReceiveResolutionWidth;\n        const height = props.local ? stats.videoSendResolutionHeight : stats.videoReceiveResolutionHeight;\n        const fps = props.local ? stats.videoSendFrameRate : stats.videoReceiveFrameRate;\n        setState({\n          accessDelay: `${stats.accessDelay ? stats.accessDelay : 0}`,\n          resolution: `${width}x${height}`,\n          fps: `${fps ? fps : 0}`,\n        })\n      })\n    }, 500);\n\n    return () => {\n      clearInterval(timer);\n    }\n  }, [stream]);\n\n  useEffect(() => {\n    if (!stream.isPlaying()) {\n      stream.play(domId, {fit: 'cover'}, (errState) => {\n        if (errState && errState.status !== 'aborted') {\n          console.log(\"stream-player play failed \", domId)\n          changeAutoplay(true);\n        }\n      });\n    } else {\n      stream.stop();\n    }\n    return () => {\n      if (stream.isPlaying()) {\n        stream.stop();\n      } else {\n        stream.play(domId, {fit: 'cover'}, (errState) => {\n          if (errState && errState.status !== 'aborted') {\n            console.log(\"stream-player play failed \", domId)\n            changeAutoplay(true);\n          }\n        });\n      }\n    }\n  }, [stream.isPlaying(), domId]);\n\n  return (\n    <div className={`stream-player ${autoplay ? \"autoplay\": ''}`} id={domId} onClick={handleClick} onDoubleClick={handleDoubleClick}>\n      {props.children}\n      {props.showProfile ? \n        <div className={props.className}>\n          <span>SD-RTN delay: {analytics.accessDelay}ms</span>\n          <span>Video: {analytics.fps}fps {analytics.resolution}</span>\n        </div>\n      : null}\n      {props.showUid && uid ? <div className='stream-uid'>UID: {uid}</div> : null }\n    </div>\n  )\n}","import React, {useEffect, useMemo} from 'react';\nimport clsx from 'clsx';\nimport {useGlobalState, useGlobalMutation} from '../utils/container';\nimport {makeStyles} from '@material-ui/core/styles';\nimport userRouter from '../utils/use-router';\nimport useStream from '../utils/use-stream';\nimport RTCClient from '../rtc-client';\nimport StreamPlayer from './meeting/stream-player';\n\nconst useStyles = makeStyles({\n  menu: {\n    height: '150px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  customBtn: {\n    width: '50px',\n    height: '50px',\n    borderRadius: '26px',\n    backgroundColor: 'rgba(0, 0, 0, 0.4)',\n    backgroundSize: '50px',\n    cursor: 'pointer',\n  },\n  leftAlign: {\n    display: 'flex',\n    flex: '1',\n    justifyContent: 'space-evenly',\n  },\n  rightAlign: {\n    display: 'flex',\n    flex: '1',\n    justifyContent: 'center'\n  },\n  menuContainer: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    zIndex: '2',\n  },\n});\n\nconst MeetingPage = () => {\n  const classes = useStyles();\n\n  const routerCtx = userRouter();\n  const stateCtx = useGlobalState();\n  const mutationCtx = useGlobalMutation();\n\n  const localClient = useMemo(() => {\n    const client = new RTCClient();\n    if (!client._created) {\n      client.createClient({codec: stateCtx.codec, mode: stateCtx.mode});\n      client._created = true;\n    }\n    return client;\n  }, [stateCtx.codec, stateCtx.mode]);\n\n  const [localStream, currentStream] = useStream(localClient);\n\n  const config = useMemo(() => {\n    return {\n      token: stateCtx.config.token,\n      channel: stateCtx.config.channelName,\n      microphoneId: stateCtx.config.microphoneId,\n      cameraId: stateCtx.config.cameraId,\n      resolution: stateCtx.config.resolution,\n      muteVideo: stateCtx.muteVideo,\n      muteAudio: stateCtx.muteAudio,\n      uid: 0,\n      host: stateCtx.config.host\n    }\n  }, [stateCtx]);\n\n  const history = routerCtx.history;\n\n  useEffect(() => {\n    if (!config.channel) {\n      history.push('/');\n    }\n  }, [config.channel, history]);\n\n  useEffect(() => {\n    if (config.channel && localClient._created && localClient._joined === false) {\n      localClient.join(config).then(() => {\n        config.host ? \n          localClient.setClientRole('host') :\n          localClient.setClientRole('audience')\n        if (config.host) {\n          localClient.publish();\n        }\n        mutationCtx.stopLoading();\n      }).catch((err) => {\n        mutationCtx.toastError(`Media ${err.info}`);\n        routerCtx.history.push('/');\n      })\n    }\n  }, [localClient, mutationCtx, config, routerCtx]);\n\n  const handleClick = (name) => {\n    return (evt) => {\n      evt.stopPropagation();\n      switch (name) {\n        case 'video': {\n          stateCtx.muteVideo ? localStream.muteVideo() : localStream.unmuteVideo();\n          mutationCtx.setVideo(!stateCtx.muteVideo);\n          break;\n        }\n        case 'audio': {\n          stateCtx.muteAudio ? localStream.muteAudio() : localStream.unmuteAudio();\n          mutationCtx.setAudio(!stateCtx.muteAudio);\n          break;\n        }\n        case 'screen': {\n          if (stateCtx.screen) {\n            localClient.createRTCStream({\n              token: null,\n              channel: stateCtx.config.channelName,\n              microphoneId: stateCtx.config.microphoneId,\n              resolution: stateCtx.config.resolution,\n              video: stateCtx.video,\n              audio: stateCtx.audio,\n            }).then(() => {\n              localClient.publish();\n              mutationCtx.setScreen(false)\n            }).catch((err) => {\n              console.log(err)\n              mutationCtx.toastError(`Media ${err.info}`);\n              routerCtx.history.push('/');\n            });\n          } else {\n            localClient.createScreenSharingStream({\n              token: null,\n              channel: stateCtx.config.channelName,\n              microphoneId: stateCtx.config.microphoneId,\n              cameraId: stateCtx.config.cameraId,\n              resolution: stateCtx.config.resolution\n            }).then(() => {\n              localClient.publish();\n              mutationCtx.setScreen(true)\n            }).catch((err) => {\n              console.log(err)\n              mutationCtx.toastError(`Media ${err.info}`);\n              routerCtx.history.push('/');\n            });\n          }\n          break;\n        }\n        case 'profile': {\n          break;\n        }\n        default:\n          throw new Error(`Unknown click handler, name: ${name}`);\n      }\n    }\n  }\n\n  const handleDoubleClick = (stream) => {\n    mutationCtx.setCurrentStream(stream);\n  }\n\n  const otherStreams = useMemo(() => {\n    return stateCtx.streams.filter(it => it.getId() !== currentStream.getId());\n  }, [currentStream, stateCtx]);\n\n  return (\n    <div className=\"meeting\">\n      <div className=\"current-view\">\n        <div className=\"nav\">\n          <div className=\"avatar-container\">\n            <div className=\"default-avatar\"></div>\n            <div className=\"avatar-text\">Agora Test</div>\n            <div className=\"like\"></div>\n          </div>\n          <div className=\"quit\" onClick={() => {\n            localClient.leave().then(() => {\n              mutationCtx.clearAllStream();\n              routerCtx.history.push('/');\n            });\n          }}></div>\n        </div>\n        {currentStream ?\n          <StreamPlayer\n            className={'main-stream-profile'}\n            showProfile={stateCtx.profile}\n            local={config.host ? currentStream.getId() === localStream.getId() : false}\n            stream={currentStream}\n            onDoubleClick={handleDoubleClick}\n            uid={currentStream.getId()}\n            domId={`stream-player-${currentStream.getId()}`}>\n            <div className={classes.menuContainer}>\n              {config.host && <div className={classes.menu}>\n                  <i onClick={handleClick('video')} className={clsx(classes.customBtn, 'margin-right-19', stateCtx.muteVideo ? 'mute-video' : 'unmute-video')}/>\n                  <i onClick={handleClick('audio')} className={clsx(classes.customBtn, stateCtx.muteAudio ? 'mute-audio' : 'unmute-audio')}/>\n                {/* <i onClick={handleClick('screen')} className={clsx(classes.customBtn, stateCtx.screen ? 'start-screen-share' : 'stop-screen-share)}/> */}\n                {/* <i onClick={handleClick('profile')} className={clsx(classes.customBtn, 'show-profile')}/> */}\n              </div>}\n            </div>\n            <div className=\"stream-container\">\n              {otherStreams.map((stream, index) => (\n                <StreamPlayer\n                  className={'stream-profile'}\n                  showProfile={stateCtx.profile}\n                  local={config.host ? stream.getId() === localStream.getId() : false}\n                  key={index}\n                  stream={stream}\n                  isPlaying={stream.isPlaying()}\n                  uid={stream.getId()}\n                  domId={`stream-player-${stream.getId()}`}\n                  onDoubleClick={handleDoubleClick}\n                  showUid={true}\n                >\n                </StreamPlayer>\n              ))}\n            </div>\n          </StreamPlayer> : null}\n      </div>\n    </div>\n  )\n};\n\n// const MeetingPage = Meeting(props);\n\nexport default MeetingPage;","import React, {useEffect, useMemo} from 'react';\nimport {useGlobalState, useGlobalMutation} from './container';\n\nexport default function useStream (client) {\n  const stateCtx = useGlobalState();\n  const mutationCtx = useGlobalMutation();\n\n  const [localStream, currentStream] = [stateCtx.localStream, stateCtx.currentStream];\n\n  const otherStreams = useMemo(\n    () => stateCtx.streams.filter(stream => stream.getId() !== currentStream.getId()),\n    [stateCtx, currentStream]);\n\n  // const streamList = stateCtx.streams.filter((it) => it.getId() !== currentStream.getId());\n\n  // const [streamList, localStream, currentStream] = useMemo(() => {\n  //   return [stateCtx.streams, stateCtx.localStream, stateCtx.currentStream];\n  // }, [stateCtx]);\n\n  useEffect(() => {\n    const addRemoteStream = (evt) => {\n      const {stream} = evt;\n      client.subscribe(stream, (err) => {\n        mutationCtx.toastError(`stream ${evt.stream.getId()} subscribe failed: ${err}`);\n      });\n    }\n    // const canceledScreenSharing = () => {\n    //   if (stateCtx.localStream) {\n    //     stateCtx.localStream.close();\n    //   }\n    //   stateCtx.toastInfo('Screen Sharing Stopped');\n    // }\n    if (client && client._subscribed === false) {\n      // client.on(\"stopScreenSharing\", canceledScreenSharing);\n      client.on(\"connection-state-change\", mutationCtx.connectionStateChanged);\n      client.on(\"localStream-added\", mutationCtx.addLocal);\n      client.on(\"stream-published\", mutationCtx.addStream);\n      client.on(\"stream-added\", addRemoteStream);\n      client.on(\"stream-removed\", mutationCtx.removeStream);\n      client.on(\"stream-subscribed\", mutationCtx.addStream);\n      client.on(\"peer-leave\", mutationCtx.removeStreamById);\n      client._subscribed = true;\n    }\n  }, [client, mutationCtx])\n\n  return [localStream, currentStream, otherStreams];\n}","import React from 'react';\nimport './App.scss';\nimport { Route, Switch } from 'react-router-dom';\nimport Index from './pages/index';\nimport Meeting from './pages/meeting';\nimport {BrowserRouterHook} from './utils/use-router';\nfunction App() {\n  return (\n    <BrowserRouterHook>\n      <Switch>\n        <Route exact path=\"/meeting/:name\" component={Meeting}></Route>\n        <Route path=\"/\" component={Index}></Route>\n      </Switch>\n    </BrowserRouterHook>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport default createMuiTheme({\n  typography: {\n   \"fontFamily\": '-apple-system, BlinkMacSystemFont, \\\\\"Segoe UI\\\\\", \\\\\"Roboto\\\\\", \\\\\"Oxygen\\\\\", \\\\\"Ubuntu\\\\\", \\\\\"Cantarell\\\\\", \\\\\"Fira Sans\\\\\", \\\\\"Droid Sans\\\\\", \\\\\"Helvetica Neue\\\\\", sans-serif',\n   \"fontSize\": 14,\n   \"fontWeightLight\": 300,\n   \"fontWeightRegular\": 400,\n   \"fontWeightMedium\": 500,\n   \"color\": \"#333\"\n  },\n\n  overrides: {\n    // MuiSnackbar: {\n    //   root: {\n    //     top: '100px',\n    //     position: 'absolute'\n    //   }\n    // },\n    MuiFormControl: {\n      root: {\n        margin: '0.3rem 0',\n      }\n    },\n    // MuiInputLabel: {\n    //   root: {\n    //     \"&$focused\": {\n    //       color: \"#44a2fc\"\n    //     }\n    //   },\n    // },\n    MuiInput: {\n      // root: {\n      //   '&$focused': {\n      //     color: \"#44a2fc\"\n      //   }\n      // },\n      underline: {\n        '&:before': {\n          borderBottom: '1px solid #EAEAEA',\n        },\n        '&:hover:not($disabled):not($focused):not($error):before': {\n          borderBottom: `2px solid #EAEAEA`,\n        },\n        '&$focused': {\n          '&:after': {\n            borderBottom: '2px solid #44a2fc',\n          }\n        },\n        // root: {\n \n            // backgroundColor: '#44a2fc',\n            // borderBottom: '1px solid red'\n        // }\n      }\n    }\n  }\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ContainerProvider } from './utils/container';\nimport { ThemeProvider } from '@material-ui/styles';\nimport THEME from './utils/theme';\n\nReactDOM.render(\n  <ThemeProvider theme={THEME}>\n    <ContainerProvider>\n      <App />\n    </ContainerProvider>\n  </ThemeProvider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}